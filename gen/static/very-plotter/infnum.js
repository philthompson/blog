// as of 2021-11-09, minify with https://codebeautify.org/minify-js
var doUnitTests=!1;function replaceAllEachChar(n,t,e){var r=n;for(let n=0;n<t.length;n++)r=r.replaceAll(t.charAt(n),e);return r}function infNum(n,t){return{v:n,e:t}}function trimZeroesOld(n){var t=n.trim();const e=t.startsWith("-");for(e&&(t=t.substr(1));t.length>1&&t.startsWith("0");)t=t.substr(1);e&&(t="-"+t);const r=t.split(".");if(1==r.length)return t;for(;r[1].length>0&&r[1].endsWith("0");)r[1]=r[1].slice(0,-1);return 0==r[1].length?t:r[0]+"."+r[1]}function trimZeroes(n){var t=n.trim().split(".");const e=t[0].startsWith("-");e&&(t[0]=t[0].substr(1));let r=0;for(let n=0;n<t[0].length-1&&"0"===t[0].charAt(n);n++)r++;if(t[0]=t[0].substring(r),0==t[0].length&&(t[0]="0"),e&&(t[0]="-"+t[0]),1==t.length||0==t[1].length)return t[0];let u=0;for(let n=t[1].length-1;n>=0&&"0"===t[1].charAt(n);n--)u--;return u<0&&(t[1]=t[1].slice(0,u),0==t[1].length)?t[0]:t[0]+"."+t[1]}function createInfNum(n){if(n.includes("e")||n.includes("E")){const t=replaceAllEachChar(n,", ","").replaceAll("E","e").split("e");let e=t[0],r=0;if(e.includes(".")){let n=e.split(".");r-=n[1].length,e=n[0]+n[1]}return r+=parseInt(t[1]),infNum(BigInt(e),BigInt(r))}{const t=trimZeroes(n).split(".");return 1==t.length?infNum(BigInt(t[0]),0n):infNum(BigInt(t[0]+""+t[1]),BigInt("-"+t[1].length))}}function copyInfNum(n){return infNum(n.v+0n,n.e+0n)}function infNumMul(n,t){return infNum(n.v*t.v,n.e+t.e)}function normInfNum(n,t){var e=copyInfNum(n),r=copyInfNum(t);if(e.e===r.e)return[e,r];var u=!1,i=e,f=r;f.e<i.e&&(u=!0,i=r,f=e);var o=f.e-i.e;const s=infNum(f.v*10n**o,f.e-o);return u?[s,i]:[i,s]}function normInPlaceInfNum(n,t,e,r,u,i){let f=copyInfNum(n),o=f.e;t.e<o&&(o=t.e),e.e<o&&(o=e.e),r.e<o&&(o=r.e),u.e<o&&(o=u.e),i.e<o&&(o=i.e);let s=f.e-o;return f.v=f.v*10n**s,f.e=f.e-s,s=t.e-o,t.v=t.v*10n**s,t.e=t.e-s,s=e.e-o,e.v=e.v*10n**s,e.e=e.e-s,s=r.e-o,r.v=r.v*10n**s,r.e=r.e-s,s=u.e-o,u.v=u.v*10n**s,u.e=u.e-s,s=i.e-o,i.v=i.v*10n**s,i.e=i.e-s,f}function infNumAdd(n,t){const e=normInfNum(n,t);return infNum(e[0].v+e[1].v,e[0].e)}function infNumAddNorm(n,t){return infNum(n.v+t.v,n.e)}function infNumSub(n,t){const e=normInfNum(n,t);return infNum(e[0].v-e[1].v,e[0].e)}function infNumSubNorm(n,t){return infNum(n.v-t.v,n.e)}function infNumDiv(n,t,e){const r=BigInt(e);let u=infNumMul(n,infNum(10n**r,0n));const i=normInfNum(u,t);u=i[0];let f=i[1];var o=infNum(u.v/f.v,u.e-f.e);o.e-=r;const s=o.v.toString().length;if(s<=e)return o;let c=10n**BigInt(s-e);return o.v/=c,o.v*=c,o}function infNumEq(n,t){const e=normInfNum(n,t);return e[0].v===e[1].v}function infNumLt(n,t){const e=normInfNum(n,t);return e[0].v<e[1].v}function infNumLe(n,t){const e=normInfNum(n,t);return e[0].v<=e[1].v}function infNumGt(n,t){if(n.v>t.v&&n.e>=t.e)return!0;const e=normInfNum(n,t);return e[0].v>e[1].v}function infNumGe(n,t){const e=normInfNum(n,t);return e[0].v>=e[1].v}function infNumGtNorm(n,t){return n.v>t.v}function infNumToString(n){var t=n.v.toString();if(0n===n.e)return t;if(n.e>0n){let e=0n;for(;e<n.e;)t+="0",e+=1n;return t}var e=0n,r="",u=!1;for(t.startsWith("-")&&(u=!0,t=t.substr(1));e>n.e;)t.length>0?(r=t.slice(-1)+r,t=t.slice(0,-1)):r="0"+r,e-=1n;return 0==t.length&&(t="0"),u&&(t="-"+t),trimZeroes(t+"."+r)}function infNumExpString(n){return infNumExpStringTruncToLen(n,-1)}function infNumExpStringTruncToLen(n,t){var e=n.v.toString();let r=!1;n.v<0&&(r=!0,e=e.substring(1));e.length;let u=e.length-1,i=n.e+BigInt(u),f=trimZeroes(e.substring(0,1)+"."+e.substring(1));return f.includes(".")||(f+=".0"),t>0&&(f=f.substring(0,t+2)),r&&(f="-"+f),f+"e"+i.toString()}function createInfNumFromExpStr(n){const t=n.split("e"),e=t[0].split(".");let r=BigInt(t[1]);return r-=BigInt(e[1].length),infNum(BigInt(e[0]+e[1]),r)}function infNumFastStr(n){let t=copyInfNum(n);for(;t.v%10n===0n&&0n!==t.v;)t.v/=10n,t.e+=1n;return t.v.toString(16)+"E"+t.e.toString(16)}function createInfNumFromFastStr(n){const t=n.split("E");let e=!1;t[0].startsWith("-")&&(e=!0,t[0]=t[0].substring(1));let r=BigInt("0x"+t[0]);e&&(r*=-1n),e=!1,t[1].startsWith("-")&&(e=!0,t[1]=t[1].substring(1));let u=BigInt("0x"+t[1]);return e&&(u*=-1n),infNum(r,u)}function infNumTruncateToLen(n,t){return createInfNum(infNumExpStringTruncToLen(n,t-1))}function infNumTruncateToLenOldMaybeBad(n,t){var e=copyInfNum(n);const r=e.v.toString();return r.length<=t||(e.v=BigInt(e.v.toString().substring(0,t)),e.e=e.e+BigInt(r.length-t)),e}function infNumMagnitude(n){var t=n.v.toString();let e=n.v<0?t.length-2:t.length-1;return parseInt(n.e)+e}