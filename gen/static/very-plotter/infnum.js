// as of 2021-11-09, minify with https://codebeautify.org/minify-js
var doUnitTests=!1;function replaceAllEachChar(n,e,o){var t=n;for(let n=0;n<e.length;n++)t=t.replaceAll(e.charAt(n),o);return t}function infNum(n,e){return{v:n,e:e}}function trimZeroesOld(n){var e=n.trim();const o=e.startsWith("-");for(o&&(e=e.substr(1));e.length>1&&e.startsWith("0");)e=e.substr(1);o&&(e="-"+e);const t=e.split(".");if(1==t.length)return e;for(;t[1].length>0&&t[1].endsWith("0");)t[1]=t[1].slice(0,-1);return 0==t[1].length?e:t[0]+"."+t[1]}function trimZeroes(n){var e=n.trim().split(".");const o=e[0].startsWith("-");o&&(e[0]=e[0].substr(1));let t=0;for(let n=0;n<e[0].length-1&&"0"===e[0].charAt(n);n++)t++;if(e[0]=e[0].substring(t),0==e[0].length&&(e[0]="0"),o&&(e[0]="-"+e[0]),1==e.length||0==e[1].length)return e[0];let r=0;for(let n=e[1].length-1;n>=0&&"0"===e[1].charAt(n);n--)r--;return r<0&&(e[1]=e[1].slice(0,r),0==e[1].length)?e[0]:e[0]+"."+e[1]}if(doUnitTests){let n="50000";console.log('trimZeroes("'+n+'") = ['+trimZeroes(n)+"] // 50000"),n="050",console.log('trimZeroes("'+n+'") = ['+trimZeroes(n)+"] // 50"),n="-050",console.log('trimZeroes("'+n+'") = ['+trimZeroes(n)+"] // -50"),n="-022.00",console.log('trimZeroes("'+n+'") = ['+trimZeroes(n)+"] // -22"),n="022.002200",console.log('trimZeroes("'+n+'") = ['+trimZeroes(n)+"] // 22.0022"),n="-22.002200",console.log('trimZeroes("'+n+'") = ['+trimZeroes(n)+"] // -22.0022"),n="000.002200",console.log('trimZeroes("'+n+'") = ['+trimZeroes(n)+"] // 0.0022"),n="-.0022",console.log('trimZeroes("'+n+'") = ['+trimZeroes(n)+"] // -0.0022"),n="5.",console.log('trimZeroes("'+n+'") = ['+trimZeroes(n)+"] // 5")}function createInfNum(n){if(n.includes("e")||n.includes("E")){const e=replaceAllEachChar(n,", ","").replaceAll("E","e").split("e");let o=e[0],t=0;if(o.includes(".")){let n=o.split(".");t-=n[1].length,o=n[0]+n[1]}return t+=parseInt(e[1]),infNum(BigInt(o),BigInt(t))}{const e=trimZeroes(n).split(".");return 1==e.length?infNum(BigInt(e[0]),0n):infNum(BigInt(e[0]+""+e[1]),BigInt("-"+e[1].length))}}if(doUnitTests){console.log(createInfNum("0.0")),console.log(createInfNum("0")),console.log(createInfNum("123")),console.log(createInfNum("123.456")),console.log(createInfNum("  3 ")),console.log(createInfNum("  123456789.000000000012345")),console.log(createInfNum("  -4.00321")),console.log(createInfNum("  -0.009 "));let n="123e4";console.log("createInfNum("+n+") = ... // (123n, 4n)"),console.log(createInfNum(n)),n="1.23e4",console.log("createInfNum("+n+") = ... // (123n, 2n)"),console.log(createInfNum(n)),n="5. E22",console.log("createInfNum("+n+") = ... // (5n, 22n)"),console.log(createInfNum(n)),n="  1.23 e -10",console.log("createInfNum("+n+") = ... // (123n, -12n)"),console.log(createInfNum(n)),n="  1,234 E -10",console.log("createInfNum("+n+") = ... // (1234n, -10n)"),console.log(createInfNum(n))}function copyInfNum(n){return infNum(n.v+0n,n.e+0n)}function infNumMul(n,e){return infNum(n.v*e.v,n.e+e.e)}function normInfNum(n,e){var o=copyInfNum(n),t=copyInfNum(e);if(o.e===t.e)return[o,t];var r=!1,u=o,l=t;l.e<u.e&&(r=!0,u=t,l=o);var i=l.e-u.e;const f=infNum(l.v*10n**i,l.e-i);return r?[f,u]:[u,f]}function normInPlaceInfNum(n,e,o,t,r,u){let l=copyInfNum(n),i=l.e;e.e<i&&(i=e.e),o.e<i&&(i=o.e),t.e<i&&(i=t.e),r.e<i&&(i=r.e),u.e<i&&(i=u.e);let f=l.e-i;return l.v=l.v*10n**f,l.e=l.e-f,f=e.e-i,e.v=e.v*10n**f,e.e=e.e-f,f=o.e-i,o.v=o.v*10n**f,o.e=o.e-f,f=t.e-i,t.v=t.v*10n**f,t.e=t.e-f,f=r.e-i,r.v=r.v*10n**f,r.e=r.e-f,f=u.e-i,u.v=u.v*10n**f,u.e=u.e-f,l}if(doUnitTests&&(console.log("100 * 1.5 = ... // 150 (1500, -1)"),console.log(infNumMul(createInfNum("100"),createInfNum("1.5"))),console.log("123.5 * 1.5 = ... // 185.25 (18525, -2)"),console.log(infNumMul(createInfNum("123.5"),createInfNum("1.5"))),console.log("123.5 * 1.5 = ... // 185.25 (18525, -2)"),console.log(infNumMul(createInfNum("123.5"),createInfNum("1.5"))),console.log("15000 * 0.0006 = ... // 9 (9, 0)"),console.log(infNumMul(createInfNum("15000"),createInfNum("0.0006")))),doUnitTests&&(console.log("100 and 123.456"),console.log(normInfNum(createInfNum("100"),createInfNum("123.456"))),console.log("0.0321 and 5"),console.log(normInfNum(createInfNum("0.0321"),createInfNum("5"))),console.log("22 and 5"),console.log(normInfNum(createInfNum("22"),createInfNum("5")))),doUnitTests){let n=infNum(5n,-2n),e=infNum(5n,-1n),o=infNum(5n,0n),t=infNum(5n,1n),r=infNum(5n,2n),u=infNum(5n,3n),l=normInPlaceInfNum(n,e,o,t,r,u);console.log("testA -> ("+l.v+" ,"+l.e+")"),console.log("testB -> ("+e.v+" ,"+e.e+")"),console.log("testC -> ("+o.v+" ,"+o.e+")"),console.log("testD -> ("+t.v+" ,"+t.e+")"),console.log("testE -> ("+r.v+" ,"+r.e+")"),console.log("testF -> ("+u.v+" ,"+u.e+")"),n=infNum(5n,-2n),e=infNum(5n,-11n),o=infNum(5n,-3n),t=infNum(5n,-22n),r=infNum(5n,-2n),u=infNum(5n,-5n),l=normInPlaceInfNum(n,e,o,t,r,u),console.log("testA -> ("+l.v+" ,"+l.e+")"),console.log("testB -> ("+e.v+" ,"+e.e+")"),console.log("testC -> ("+o.v+" ,"+o.e+")"),console.log("testD -> ("+t.v+" ,"+t.e+")"),console.log("testE -> ("+r.v+" ,"+r.e+")"),console.log("testF -> ("+u.v+" ,"+u.e+")"),n=infNum(5n,2n),e=infNum(5n,11n),o=infNum(5n,3n),t=infNum(5n,22n),r=infNum(5n,2n),u=infNum(5n,5n),l=normInPlaceInfNum(n,e,o,t,r,u),console.log("testA -> ("+l.v+" ,"+l.e+")"),console.log("testB -> ("+e.v+" ,"+e.e+")"),console.log("testC -> ("+o.v+" ,"+o.e+")"),console.log("testD -> ("+t.v+" ,"+t.e+")"),console.log("testE -> ("+r.v+" ,"+r.e+")"),console.log("testF -> ("+u.v+" ,"+u.e+")")}function infNumAdd(n,e){const o=normInfNum(n,e);return infNum(o[0].v+o[1].v,o[0].e)}function infNumAddNorm(n,e){return infNum(n.v+e.v,n.e)}function infNumSub(n,e){const o=normInfNum(n,e);return infNum(o[0].v-o[1].v,o[0].e)}function infNumSubNorm(n,e){return infNum(n.v-e.v,n.e)}function infNumDiv(n,e,o){const t=BigInt(o);let r=infNumMul(n,infNum(10n**t,0n));const u=normInfNum(r,e);r=u[0];let l=u[1];var i=infNum(r.v/l.v,r.e-l.e);i.e-=t;const f=i.v.toString().length;if(f<=o)return i;let c=10n**BigInt(f-o);return i.v/=c,i.v*=c,i}if(doUnitTests&&(console.log("100 + 1.5 = ... // 101.5 (1015, -1)"),console.log(infNumAdd(createInfNum("100"),createInfNum("1.5"))),console.log("123 + 0.456 = ... // 123.456 (123456, -3)"),console.log(infNumAdd(createInfNum("123"),createInfNum("0.456"))),console.log("0.00001 + 5.05 = ... // 5.05001 (505001, -5)"),console.log(infNumAdd(createInfNum("0.00001"),createInfNum("5.05")))),doUnitTests&&(console.log("100 - 1.5 = ... // 98.5 (985, -1)"),console.log(infNumSub(createInfNum("100"),createInfNum("1.5"))),console.log("123 - 0.01 = ... // 122.99 (12299, -2)"),console.log(infNumSub(createInfNum("123"),createInfNum("0.01"))),console.log("0.00001 - 50 = ... // -49.99999 (-4999999, -5)"),console.log(infNumSub(createInfNum("0.00001"),createInfNum("50")))),doUnitTests){let n=infNumDiv(createInfNum("50000"),createInfNum("20"),8);console.log("50000 / 20 (8 sig.dig.) = ["+infNumToString(n)+"] // 2500"),console.log(n),n=infNumDiv(createInfNum("100"),createInfNum("7"),8),console.log("100 / 7 (8 sig.dig.) = ["+infNumToString(n)+"] // 14.285714"),console.log(n),n=infNumDiv(createInfNum("100"),createInfNum("64"),8),console.log("100 / 64 (8 sig.dig.) = ["+infNumToString(n)+"] // 1.5625"),console.log(n),n=infNumDiv(createInfNum("1302"),createInfNum("10.5"),8),console.log("1302 / 10.5 (8 sig.dig.) = ["+infNumToString(n)+"] // 124"),console.log(n),n=infNumToString(infNumDiv(createInfNum("1"),createInfNum("7"),12)),console.log("1 / 7 (12 sig.dig.) = ["+n+"] // 0.142857142857"),n=infNumToString(infNumDiv(createInfNum("1000000"),createInfNum("7"),12)),console.log("1000000 / 7 (12 sig.dig.) = ["+n+"] // 142857.142857"),n=infNumToString(infNumDiv(createInfNum("10"),createInfNum("3"),5)),console.log("10 / 3 (5 sig.dig.) = ["+n+"] // 3.3333"),n=infNumToString(infNumDiv(createInfNum("100000"),createInfNum("3"),3)),console.log("100000 / 3 (3 sig.dig.) = ["+n+"] // 33300")}function infNumEq(n,e){const o=normInfNum(n,e);return o[0].v===o[1].v}function infNumLt(n,e){if(n.v<e.v&&n.e<=e.e)return!0;if(0n===n.v)return!(e.v<=0n);if(0n===e.v)return n.v<0n;const o=normInfNum(n,e);return o[0].v<o[1].v}function infNumLe(n,e){const o=normInfNum(n,e);return o[0].v<=o[1].v}function infNumGt(n,e){if(n.v>e.v&&n.e>=e.e)return!0;if(0n===n.v)return e.v<0n;if(0n===e.v)return!(n.v<0n);const o=normInfNum(n,e);return o[0].v>o[1].v}function infNumGe(n,e){const o=normInfNum(n,e);return o[0].v>=o[1].v}function infNumGtNorm(n,e){return n.v>e.v}function infNumToString(n){var e=n.v.toString();if(0n===n.e)return e;if(n.e>0n){let o=0n;for(;o<n.e;)e+="0",o+=1n;return e}var o=0n,t="",r=!1;for(e.startsWith("-")&&(r=!0,e=e.substr(1));o>n.e;)e.length>0?(t=e.slice(-1)+t,e=e.slice(0,-1)):t="0"+t,o-=1n;return 0==e.length&&(e="0"),r&&(e="-"+e),trimZeroes(e+"."+t)}function infNumExpString(n){return infNumExpStringTruncToLen(n,-1)}function infNumExpStringTruncToLen(n,e){var o=n.v.toString();let t=!1;n.v<0&&(t=!0,o=o.substring(1));o.length;let r=o.length-1,u=n.e+BigInt(r),l=trimZeroes(o.substring(0,1)+"."+o.substring(1));return l.includes(".")||(l+=".0"),e>0&&(l=l.substring(0,e+2)),t&&(l="-"+l),l+"e"+u.toString()}if(doUnitTests&&(console.log("100 < 123.456 // true"),console.log(infNumLt(createInfNum("100"),createInfNum("123.456"))),console.log("0.0321 > 5 // false"),console.log(infNumGt(createInfNum("0.0321"),createInfNum("5"))),console.log("5 > 0.0321 // true"),console.log(infNumGt(createInfNum("5"),createInfNum("0.0321"))),console.log("22 === 5 // false"),console.log(infNumEq(createInfNum("22"),createInfNum("5"))),console.log("-22 > 5 // false"),console.log(infNumGt(createInfNum("-22"),createInfNum("5"))),console.log("-22 <= -22.0000 // true"),console.log(infNumLe(createInfNum("-22"),createInfNum("-22.0000")))),doUnitTests&&(console.log("(22,0) // 22"),console.log(infNumToString(infNum(22n,0n))),console.log("(22,1) // 220"),console.log(infNumToString(infNum(22n,1n))),console.log("22,-1) // 2.2"),console.log(infNumToString(infNum(22n,-1n))),console.log("22,-2) // 0.22"),console.log(infNumToString(infNum(22n,-2n))),console.log("22,-4) // 0.0022"),console.log(infNumToString(infNum(22n,-4n))),console.log("(-22,0) // -22"),console.log(infNumToString(infNum(-22n,0n))),console.log("(-22,1) // -220"),console.log(infNumToString(infNum(-22n,1n))),console.log("-22,-4) // -0.0022"),console.log(infNumToString(infNum(-22n,-4n)))),doUnitTests){let n="22";console.log('infNumExpString("'+n+'") = ['+infNumExpString(createInfNum(n))+"]// 2.2e1"),n="123456789",console.log('infNumExpStringTruncToLen("'+n+'", 5) = ['+infNumExpStringTruncToLen(createInfNum(n),5)+"]// 1.23456e8")}function createInfNumFromExpStr(n){const e=n.split("e"),o=e[0].split(".");let t=BigInt(e[1]);return t-=BigInt(o[1].length),infNum(BigInt(o[0]+o[1]),t)}if(doUnitTests){let n="5.0e0";console.log('createInfNumFromExpStr("'+n+'") = ... // (50n, -1n)'),console.log(createInfNumFromExpStr(n)),n="-5.0e2",console.log('createInfNumFromExpStr("'+n+'") = ... // (-50n, 1n)'),console.log(createInfNumFromExpStr(n)),n="3.21e-4",console.log('createInfNumFromExpStr("'+n+'") = ... // (321n, -6n)'),console.log(createInfNumFromExpStr(n))}function infNumFastStr(n){let e=copyInfNum(n);for(;e.v%10n===0n&&0n!==e.v;)e.v/=10n,e.e+=1n;return e.v.toString(16)+"E"+e.e.toString(16)}function createInfNumFromFastStr(n){const e=n.split("E");let o=!1;e[0].startsWith("-")&&(o=!0,e[0]=e[0].substring(1));let t=BigInt("0x"+e[0]);o&&(t*=-1n),o=!1,e[1].startsWith("-")&&(o=!0,e[1]=e[1].substring(1));let r=BigInt("0x"+e[1]);return o&&(r*=-1n),infNum(t,r)}if(doUnitTests)for(let n of[infNum(5n,-22n),infNum(5n,2n),infNum(12345n,4321n),infNum(-123n,99n),infNum(-123n,-99n)])console.log(n," -> infNumFastStr() -> createInfNumFromFastStr() -> ..."),console.log(createInfNumFromFastStr(infNumFastStr(n)));function infNumTruncateToLen(n,e){return createInfNum(infNumExpStringTruncToLen(n,e-1))}function infNumTruncateToLenOldMaybeBad(n,e){var o=copyInfNum(n);const t=o.v.toString();return t.length<=e||(o.v=BigInt(o.v.toString().substring(0,e)),o.e=o.e+BigInt(t.length-e)),o}function infNumMagnitude(n){var e=n.v.toString();let o=n.v<0?e.length-2:e.length-1;return parseInt(n.e)+o}var infNumSqrt10=infNum(31622776601683795n,-16n);function infNumRoughSqrt(n){return 0n===n.v?n:n.e%2n===0n?{v:bigIntRoughSqrt(n.v),e:n.e/2n}:infNumMul(infNumSqrt10,{v:bigIntRoughSqrt(n.v),e:Math.floor(n.e/2)})}function bigIntRoughSqrt(n){if(n<0n)throw"cannot take rough square root of negative value";let e=n.toString().length;const o=e-1;let t=10n*n;for(e++;t<100n;)t*=10n,e++;t/=10n**BigInt(e-3);const r=parseFloat(t)/100;return(o%2==0?BigInt(Math.round(1e3*Math.sqrt(r)))*10n**BigInt(o/2):BigInt(Math.round(1e3*Math.sqrt(r)))*10n**BigInt(Math.floor(o/2))*3n)/BigInt(1000n)}