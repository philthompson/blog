// as of 2021-10-22, minify with https://minify.js.org/js/ which does NOT require changing "const" to "var" :)
// as of 2021-11-09, minify with https://codebeautify.org/minify-js
const points=[];var totalLength=0;const dCanvas=document.getElementById("dc"),dContext=dCanvas.getContext("2d");var mouseDrag=!1,mouseDragX=0,mouseDragY=0,pinch=!1,pinchStartDist=0,showMousePosition=!1,shiftPressed=!1,historyParams={},replaceStateTimeout=null,historyTimeout=null,resizeTimeout=null,helpVisible=!1,menuVisible=!1;const windowLogTiming=!0,mandelbrotCircleHeuristic=!1;var truncateLength=24;const windowCalcIgnorePointColor=-2,windowCalc={timeout:null,plotName:"",lineWidth:0,xPixelChunks:[],resultPoints:[],pointsBounds:"",pointsCache:{},passTimeMs:0,totalTimeMs:0,startTimeMs:0,endTimeMs:0,totalPoints:0,cachedPoints:0,chunksComplete:0,totalChunks:0,eachPixUnits:infNum(1n,0n),leftEdge:infNum(0n,0n),topEdge:infNum(0n,0n),rightEdge:infNum(0n,0n),bottomEdge:infNum(0n,0n),leftEdgeFloat:0,topEdgeFloat:0,n:1,scale:infNum(1n,0n)};var windowCalcRepeat=0,windowCalcTimes=[];const inputGotoTopLeftX=document.getElementById("go-to-tl-x"),inputGotoTopLeftY=document.getElementById("go-to-tl-y"),inputGotoBotRightX=document.getElementById("go-to-br-x"),inputGotoBotRightY=document.getElementById("go-to-br-y"),inputGotoCenterX=document.getElementById("go-to-c-x"),inputGotoCenterY=document.getElementById("go-to-c-y"),inputGotoScale=document.getElementById("go-to-scale"),btnGotoBoundsGo=document.getElementById("go-to-b-go"),btnGotoBoundsReset=document.getElementById("go-to-b-reset"),btnGotoCenterGo=document.getElementById("go-to-c-go"),btnGotoCenterReset=document.getElementById("go-to-c-reset"),inputFields=document.getElementsByTagName("input");function infNum(e,t){return{v:e,e:t}}function trimZeroes(e){var t=e.trim();const n=t.startsWith("-");for(n&&(t=t.substr(1));t.length>1&&t.startsWith("0");)t=t.substr(1);n&&(t="-"+t);const o=t.split(".");if(1==o.length)return t;for(;o[1].length>0&&o[1].endsWith("0");)o[1]=o[1].slice(0,-1);return 0==o[1].length?t:o[0]+"."+o[1]}var unitTest=trimZeroes("50000");function createInfNum(e){const t=trimZeroes(e).split(".");return 1==t.length?infNum(BigInt(t[0]),0n):infNum(BigInt(t[0]+""+t[1]),BigInt("-"+t[1].length))}function copyInfNum(e){return infNum(e.v+0n,e.e+0n)}function infNumMul(e,t){return infNum(e.v*t.v,e.e+t.e)}function normInfNum(e,t){var n=copyInfNum(e),o=copyInfNum(t);if(n.e===o.e)return[n,o];var i=!1,r=n,a=o;a.e<r.e&&(i=!0,r=o,a=n);var s=a.e-r.e;const l=infNum(a.v*10n**s,a.e-s);return i?[l,r]:[r,l]}function normInPlaceInfNum(e,t,n,o,i,r){let a=copyInfNum(e),s=a.e;t.e<s&&(s=t.e),n.e<s&&(s=n.e),o.e<s&&(s=o.e),i.e<s&&(s=i.e),r.e<s&&(s=r.e);let l=a.e-s;return a.v=a.v*10n**l,a.e=a.e-l,l=t.e-s,t.v=t.v*10n**l,t.e=t.e-l,l=n.e-s,n.v=n.v*10n**l,n.e=n.e-l,l=o.e-s,o.v=o.v*10n**l,o.e=o.e-l,l=i.e-s,i.v=i.v*10n**l,i.e=i.e-l,l=r.e-s,r.v=r.v*10n**l,r.e=r.e-l,a}console.log('trimZeroes("50000") = ['+unitTest+"] // 50000"),unitTest=trimZeroes("050"),console.log('trimZeroes("050") = ['+unitTest+"] // 50"),unitTest=trimZeroes("-050"),console.log('trimZeroes("-050") = ['+unitTest+"] // -50"),unitTest=trimZeroes("-022.00"),console.log('trimZeroes("-022.00") = ['+unitTest+"] // -22"),unitTest=trimZeroes("022.002200"),console.log('trimZeroes("022.002200") = ['+unitTest+"] // 22.0022"),unitTest=trimZeroes("-22.002200"),console.log('trimZeroes("-22.002200") = ['+unitTest+"] // -22.0022"),console.log(createInfNum("0.0")),console.log(createInfNum("0")),console.log(createInfNum("123")),console.log(createInfNum("123.456")),console.log(createInfNum("  3 ")),console.log(createInfNum("  123456789.000000000012345")),console.log(createInfNum("  -4.00321")),console.log(createInfNum("  -0.009 ")),console.log("100 * 1.5 = ... // 150 (1500, -1)"),console.log(infNumMul(createInfNum("100"),createInfNum("1.5"))),console.log("123.5 * 1.5 = ... // 185.25 (18525, -2)"),console.log(infNumMul(createInfNum("123.5"),createInfNum("1.5"))),console.log("123.5 * 1.5 = ... // 185.25 (18525, -2)"),console.log(infNumMul(createInfNum("123.5"),createInfNum("1.5"))),console.log("15000 * 0.0006 = ... // 9 (9, 0)"),console.log(infNumMul(createInfNum("15000"),createInfNum("0.0006"))),console.log("100 and 123.456"),console.log(normInfNum(createInfNum("100"),createInfNum("123.456"))),console.log("0.0321 and 5"),console.log(normInfNum(createInfNum("0.0321"),createInfNum("5"))),console.log("22 and 5"),console.log(normInfNum(createInfNum("22"),createInfNum("5")));let testA=infNum(5n,-2n),testB=infNum(5n,-1n),testC=infNum(5n,0n),testD=infNum(5n,1n),testE=infNum(5n,2n),testF=infNum(5n,3n),normA=normInPlaceInfNum(testA,testB,testC,testD,testE,testF);function infNumAdd(e,t){const n=normInfNum(e,t);return infNum(n[0].v+n[1].v,n[0].e)}function infNumAddNorm(e,t){return infNum(e.v+t.v,e.e)}function infNumSub(e,t){const n=normInfNum(e,t);return infNum(n[0].v-n[1].v,n[0].e)}function infNumSubNorm(e,t){return infNum(e.v-t.v,e.e)}function infNumDiv(e,t){const n=normInfNum(e,t);var o=n[0],i=n[1],r=infNum(o.v/i.v,o.e-i.e),a=infNum(o.v%i.v,o.e-i.e);if(0n===a.v)return r;var s=infNumMul(a,infNum(10000000000000000n,0n));return infNumAdd(r,infNum(s.v/i.v,-16n))}console.log("testA -> ("+normA.v+" ,"+normA.e+")"),console.log("testB -> ("+testB.v+" ,"+testB.e+")"),console.log("testC -> ("+testC.v+" ,"+testC.e+")"),console.log("testD -> ("+testD.v+" ,"+testD.e+")"),console.log("testE -> ("+testE.v+" ,"+testE.e+")"),console.log("testF -> ("+testF.v+" ,"+testF.e+")"),testA=infNum(5n,-2n),testB=infNum(5n,-11n),testC=infNum(5n,-3n),testD=infNum(5n,-22n),testE=infNum(5n,-2n),testF=infNum(5n,-5n),normA=normInPlaceInfNum(testA,testB,testC,testD,testE,testF),console.log("testA -> ("+normA.v+" ,"+normA.e+")"),console.log("testB -> ("+testB.v+" ,"+testB.e+")"),console.log("testC -> ("+testC.v+" ,"+testC.e+")"),console.log("testD -> ("+testD.v+" ,"+testD.e+")"),console.log("testE -> ("+testE.v+" ,"+testE.e+")"),console.log("testF -> ("+testF.v+" ,"+testF.e+")"),testA=infNum(5n,2n),testB=infNum(5n,11n),testC=infNum(5n,3n),testD=infNum(5n,22n),testE=infNum(5n,2n),testF=infNum(5n,5n),normA=normInPlaceInfNum(testA,testB,testC,testD,testE,testF),console.log("testA -> ("+normA.v+" ,"+normA.e+")"),console.log("testB -> ("+testB.v+" ,"+testB.e+")"),console.log("testC -> ("+testC.v+" ,"+testC.e+")"),console.log("testD -> ("+testD.v+" ,"+testD.e+")"),console.log("testE -> ("+testE.v+" ,"+testE.e+")"),console.log("testF -> ("+testF.v+" ,"+testF.e+")"),console.log("100 + 1.5 = ... // 101.5 (1015, -1)"),console.log(infNumAdd(createInfNum("100"),createInfNum("1.5"))),console.log("123 + 0.456 = ... // 123.456 (123456, -3)"),console.log(infNumAdd(createInfNum("123"),createInfNum("0.456"))),console.log("0.00001 + 5.05 = ... // 5.05001 (505001, -5)"),console.log(infNumAdd(createInfNum("0.00001"),createInfNum("5.05"))),console.log("100 - 1.5 = ... // 98.5 (985, -1)"),console.log(infNumSub(createInfNum("100"),createInfNum("1.5"))),console.log("123 - 0.01 = ... // 122.99 (12299, -2)"),console.log(infNumSub(createInfNum("123"),createInfNum("0.01"))),console.log("0.00001 - 50 = ... // -49.99999 (-4999999, -5)"),console.log(infNumSub(createInfNum("0.00001"),createInfNum("50")));unitTest=infNumDiv(createInfNum("50000"),createInfNum("20"));function infNumEq(e,t){const n=normInfNum(e,t);return n[0].v===n[1].v}function infNumLt(e,t){const n=normInfNum(e,t);return n[0].v<n[1].v}function infNumLe(e,t){const n=normInfNum(e,t);return n[0].v<=n[1].v}function infNumGt(e,t){if(e.v>t.v&&e.e>=t.e)return!0;const n=normInfNum(e,t);return n[0].v>n[1].v}function infNumGe(e,t){const n=normInfNum(e,t);return n[0].v>=n[1].v}function infNumGtNorm(e,t){return e.v>t.v}function infNumToString(e){var t=e.v.toString();if(0n===e.e)return t;if(e.e>0n){let n=0n;for(;n<e.e;)t+="0",n+=1n;return t}var n=0n,o="",i=!1;for(t.startsWith("-")&&(i=!0,t=t.substr(1));n>e.e;)t.length>0?(o=t.slice(-1)+o,t=t.slice(0,-1)):o="0"+o,n-=1n;return 0==t.length&&(t="0"),i&&(t="-"+t),trimZeroes(t+"."+o)}function infNumTruncate(e){var t=copyInfNum(e);const n=t.v.toString();return n.length<=truncateLength||(t.v=BigInt(t.v.toString().substring(0,truncateLength)),t.e=t.e+BigInt(n.length-truncateLength)),t}console.log("50000 / 20 = ["+infNumToString(unitTest)+"] // 2500 (25, 2)"),console.log(unitTest),unitTest=infNumDiv(createInfNum("100"),createInfNum("7")),console.log("100 / 7 = ["+infNumToString(unitTest)+"] // 14.28571428571428..."),console.log(unitTest),unitTest=infNumDiv(createInfNum("100"),createInfNum("64")),console.log("100 / 64 = ["+infNumToString(unitTest)+"] // 1.5625 (15625, -4)"),console.log(unitTest),unitTest=infNumDiv(createInfNum("1302"),createInfNum("10.5")),console.log("1302 / 10.5 = ["+infNumToString(unitTest)+"] // 124"),console.log(unitTest),console.log("100 < 123.456 // true"),console.log(infNumLt(createInfNum("100"),createInfNum("123.456"))),console.log("0.0321 > 5 // false"),console.log(infNumGt(createInfNum("0.0321"),createInfNum("5"))),console.log("5 > 0.0321 // true"),console.log(infNumGt(createInfNum("5"),createInfNum("0.0321"))),console.log("22 === 5 // false"),console.log(infNumEq(createInfNum("22"),createInfNum("5"))),console.log("-22 > 5 // false"),console.log(infNumGt(createInfNum("-22"),createInfNum("5"))),console.log("-22 <= -22.0000 // true"),console.log(infNumLe(createInfNum("-22"),createInfNum("-22.0000"))),console.log("(22,0) // 22"),console.log(infNumToString(infNum(22n,0n))),console.log("(22,1) // 220"),console.log(infNumToString(infNum(22n,1n))),console.log("22,-1) // 2.2"),console.log(infNumToString(infNum(22n,-1n))),console.log("22,-2) // 0.22"),console.log(infNumToString(infNum(22n,-2n))),console.log("22,-4) // 0.0022"),console.log(infNumToString(infNum(22n,-4n))),console.log("(-22,0) // -22"),console.log(infNumToString(infNum(-22n,0n))),console.log("(-22,1) // -220"),console.log(infNumToString(infNum(-22n,1n))),console.log("-22,-4) // -0.0022"),console.log(infNumToString(infNum(-22n,-4n)));const plots=[{name:"Mandelbrot-set",calcFrom:"window",desc:"The Mandelbrot set is the set of complex numbers, that when repeatedly plugged into the following simple function, does <i>not</i> run away to infinity.  The function is z<sub>n+1</sub> = z<sub>n</sub><sup>2</sup> + c.<br/>For each plotted point <code>c</code>, we repeat the above function many times.<br/>If the value jumps off toward infinity after say 10 iterations, we display a color at the pixel for point <code>c</code>.<br/>If the value doesn't go off toward infinity until say 50 iterations, we pick a quite different color for that point.<br/>If, after our alloted number of iterations has been computed, the value still hasn't gone off to infinity, we color that pixel the backgrond color (defaulting to black).<br/><br/>Wikipedia has a terrific <a target='_blank' href='https://en.wikipedia.org/wiki/Mandelbrot_set'>article with pictures</a>.<br/><br/>My favorite explanation I've found so far is <a target='_blank' href='https://www.youtube.com/watch?v=FFftmWSzgmk'>this Numberphile video on YouTube</a>.<br/><br/><b>Tips for using this Mandelbrot set viewer</b>:<br/>- When not zoomed in very far, keep the <code>n</code> (iterations) parameter low for faster calculation (use N and M keys to decrease/increase the <code>n</code> value).<br/>- To see more detail when zoomed in, increase the <code>n</code> (iterations) parameter with the M key.  Calculations will be slower.",computeBoundPointColor:function(e,t,n){const o=historyParams.n;var i=infNum(0n,0n),r=infNum(0n,0n),a=infNum(0n,0n),s=infNum(0n,0n),l=infNum(0n,0n),c=0;try{for(;c<o&&!infNumGt(infNumAdd(a=infNumMul(i,i),s=infNumMul(r,r)),e.boundsRadiusSquared);)l=infNumAdd(t,infNumSub(a,s)),r=infNumAdd(n,infNumMul(e.two,infNumMul(i,r))),i=infNumTruncate(i=l),r=infNumTruncate(r),c++;return c==o?-1:e.applyColorCurve(c/o)}catch(e){return console.log("ERROR CAUGHT when processing point (x, y, iter, maxIter): ["+infNumToString(t)+", "+infNumToString(n)+", "+c+", "+o+"]:"),console.log(e.name+": "+e.message+":\n"+e.stack.split("\n").slice(0,5).join("\n")),-2}},computeBoundPointColorNew:function(e,t,n){const o=historyParams.n;var i=infNum(0n,0n),r=infNum(0n,0n),a=null,s=null,l=null,c=null,u=null,m=null,d=null,f=0;try{for(;f<o&&(a=infNumMul(i,i),s=infNumMul(r,r),l=infNumMul(i,r),m=copyInfNum(t),d=copyInfNum(n),c=normInPlaceInfNum(e.boundsRadiusSquared,a,s,m,d,l),!infNumGtNorm(infNumAddNorm(a,s),c));)u=infNumAddNorm(m,infNumSubNorm(a,s)),r=infNumAddNorm(d,infNumMul(e.two,l)),i=infNumTruncate(u),r=infNumTruncate(r),f++;return f==o?-1:e.applyColorCurve(f/o)}catch(e){return console.log("ERROR CAUGHT when processing point (x, y, iter, maxIter): ["+infNumToString(t)+", "+infNumToString(n)+", "+f+", "+o+"]:"),console.log(e.name+": "+e.message+":\n"+e.stack.split("\n").slice(0,5).join("\n")),-2}},forcedDefaults:{n:50,scale:infNum(400n,0n),centerX:createInfNum("-0.65"),centerY:infNum(0n,0n)},privContext:{usesImaginaryCoordinates:!0,two:infNum(2n,0n),black:getColor(0,0,0),boundsRadiusSquared:infNum(4n,0n),colors:{},applyColorCurve:function(e){const t=-.76991*e*e+1.73351*e+.0250757;return t<0?0:t>1?1:t},circles:[{centerX:createInfNum("-0.29"),centerY:infNum(0n,0n),radSq:createInfNum("0.18")},{centerX:createInfNum("-0.06"),centerY:createInfNum("0.22"),radSq:createInfNum("0.13")},{centerX:createInfNum("-0.06"),centerY:createInfNum("-0.22"),radSq:createInfNum("0.13")},{centerX:createInfNum("-1.0"),centerY:createInfNum("0.0"),radSq:createInfNum("0.04")}],adjustTruncate:function(){truncateLength=infNumLt(historyParams.scale,createInfNum("1000"))?12:infNumLt(historyParams.scale,createInfNum("1000000"))?18:24,console.log("set truncateLength to ["+truncateLength+"]")}}},{name:"Primes-1-Step-90-turn",calcFrom:"sequence",desc:"Move 1 step forward per integer, but for primes, turn 90 degrees clockwise before moving.",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>5e6&&(historyParams.n=5e6);const o=historyParams;var i=getPoint(0,0);e.direction=0;for(var r=1;r<o.n;r+=1)isPrime(r)&&(t.push(i),e.direction=e.changeDirection(e.direction)),i=e.computeNextPoint(e.direction,r,i.x,i.y),n+=1;return t.push(i),{points:t,length:n}},forcedDefaults:{n:6e4,scale:createInfNum("1.2"),centerX:createInfNum("-240"),centerY:createInfNum("288")},privContext:{direction:0,changeDirection:function(e){return changeDirectionDegrees(e,90)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,1,n,o)}}},{name:"Primes-1-Step-45-turn",calcFrom:"sequence",desc:"Move 1 step forward per integer, but for primes, turn 45 degrees clockwise before moving.  When moving diagonally, we move 1 step on both the x and y axes, so we're actually moving ~1.414 steps diagonally.",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>5e6&&(historyParams.n=5e6);const o=historyParams;var i=getPoint(0,0);e.direction=315;for(var r=1;r<o.n;r+=1)isPrime(r)&&(t.push(i),e.direction=e.changeDirection(e.direction)),i=e.computeNextPoint(e.direction,r,i.x,i.y),n+=1;return t.push(i),{points:t,length:n}},forcedDefaults:{n:6e4,scale:createInfNum("0.85"),centerX:infNum(0n,0n),centerY:infNum(0n,0n)},privContext:{direction:0,changeDirection:function(e){return changeDirectionDegrees(e,45)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,1,n,o)}}},{name:"Squares-1-Step-90-turn",calcFrom:"sequence",desc:"Move 1 step forward per integer, but for perfect squares, turn 90 degrees clockwise before moving.",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>1e6&&(historyParams.n=1e6);const o=historyParams;var i=getPoint(0,0);e.direction=270;for(var r=1;r<o.n;r+=1)e.isSquare(r)&&(t.push(i),e.direction=e.changeDirection(e.direction)),i=e.computeNextPoint(e.direction,r,i.x,i.y),n+=1;return t.push(i),{points:t,length:n}},forcedDefaults:{n:5e3,scale:createInfNum("6.5"),centerX:infNum(0n,0n),centerY:infNum(0n,0n)},privContext:{direction:0,changeDirection:function(e){return changeDirectionDegrees(e,90)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,1,n,o)},isSquare:function(e){const t=Math.sqrt(e);return t==Math.trunc(t)}}},{name:"Squares-1-Step-45-turn",calcFrom:"sequence",desc:"Move 1 step forward per integer, but for perfect squares, turn 45 degrees clockwise before moving.  When moving diagonally, we move 1 step on both the x and y axes, so we're actually moving ~1.414 steps diagonally.",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>1e6&&(historyParams.n=1e6);const o=historyParams;var i=getPoint(0,0);e.direction=270;for(var r=1;r<o.n;r+=1)e.isSquare(r)&&(t.push(i),e.direction=e.changeDirection(e.direction)),i=e.computeNextPoint(e.direction,r,i.x,i.y),n+=1;return t.push(i),{points:t,length:n}},forcedDefaults:{n:5e3,scale:createInfNum("2.3"),centerX:infNum(0n,0n),centerY:infNum(0n,0n)},privContext:{direction:0,changeDirection:function(e){return changeDirectionDegrees(e,45)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,1,n,o)},isSquare:function(e){const t=Math.sqrt(e);return t==Math.trunc(t)}}},{name:"Primes-X-Y-neg-mod-3",calcFrom:"sequence",desc:"Where each plotted point <code>(x,y)</code> consists of the primes, in order.  Those points are (2,3), (5,7), (11,13), and so on.<br/><br/>Then we take the sum of the digits of both the <code>x</code> and <code>y</code> of each point.<br/>If that sum, mod 3, is 1, the <code>x</code> is negated.<br/>If that sum, mod 3, is 2, the <code>y</code> is negated.<br/><br/>After applying the negation rule, the first three plotted points become:<br/><code>(2,3)&nbsp;&nbsp;→ sum digits = 5&nbsp;&nbsp;mod 3 = 2 → -y → (2,-3)</code><br/><code>(5,7)&nbsp;&nbsp;→ sum digits = 12 mod 3 = 0 →&nbsp;&nbsp;&nbsp;&nbsp;→ (5,7)</code><br/><code>(11,13)→ sum digits = 6&nbsp;&nbsp;mod 3 = 0 →&nbsp;&nbsp;&nbsp;&nbsp;→ (11,13)</code>",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>1e6&&(historyParams.n=1e6);const o=historyParams;var i=-1,r=getPoint(0,0);t.push(r);for(var a=1;a<o.n;a+=1)if(isPrime(a))if(-1==i)i=a;else{var s=a;const e=(i.toString()+s.toString()).split("");for(var l=0,c=0;c<e.length;c++)l+=e[c];const o=l%3;1==o?i*=-1:2==o&&(s*=-1);const u=getPoint(parseFloat(i),parseFloat(s));n+=Math.hypot(u.x-r.x,u.y-r.y),t.push(u),i=-1,r=u}return{points:t,length:n}},forcedDefaults:{n:5e3,scale:createInfNum("0.08"),centerX:infNum(0n,0n),centerY:infNum(0n,0n)},privContext:{}},{name:"Trapped-Knight",calcFrom:"sequence",desc:"On a chessboard, where the squares are numbered in a spiral, find the squares a knight can jump to in sequence where the smallest-numbered square must always be taken.  Previously-visited squares cannot be returned to again.  After more than 2,000 jumps the knight has no valid squares to jump to, so the sequence ends.<br/><br/>Credit to The Online Encyclopedia of Integer Sequences:<br/><a target='_blank' href='https://oeis.org/A316667'>https://oeis.org/A316667</a><br/>and to Numberphile:<br/><a target='_blank' href='https://www.youtube.com/watch?v=RGQe8waGJ4w'>https://www.youtube.com/watch?v=RGQe8waGJ4w</a>",computePointsAndLength:function(e){var t=[],n=0;e.visitedSquares={};const o=historyParams;var i=getPoint(0,0);if(!e.isNumberedSquare(e,i)){let t=i;e.trackNumberedSquare(e,0,i);let n=0,o=90;for(let r=1;r<3562;r+=1)n=e.changeDirection(o),t=e.computeNextPoint(n,1,i.x,i.y),e.isNumberedSquare(e,t)?i=e.computeNextPoint(o,1,i.x,i.y):(o=n,i=t),e.trackNumberedSquare(e,r,i)}var r=getPoint(0,0);t.push(r),e.visitSquare(e,0,r);var a=[],s=-1,l=null;for(let i=0;i<o.n;i+=1){a=e.reachableSquares(r);for(let t=0;t<a.length;t++)(-1==s||e.getSquareNumber(e,a[t])<s)&&(e.isVisited(e,a[t])||(l=a[t],s=e.getSquareNumber(e,l)));if(-1==s)break;n+=Math.hypot(l.x-r.x,l.y-r.y),r=l,t.push(getPoint(r.x,-1*r.y)),e.visitSquare(e,s,r),s=-1}return{points:t,length:n}},forcedDefaults:{n:2016,scale:infNum(15n,0n),centerX:infNum(0n,0n),centerY:infNum(0n,0n)},privContext:{boardPoints:{},visitedSquares:{},trackNumberedSquare:function(e,t,n){e.boardPoints[n.x+"-"+n.y]=t},isNumberedSquare:function(e,t){return t.x+"-"+t.y in e.boardPoints},getSquareNumber:function(e,t){const n=t.x+"-"+t.y;return!n in e.boardPoints&&console.log("MISSING SQUARE - "+n),e.boardPoints[n]},visitSquare:function(e,t,n){e.visitedSquares[n.x+"-"+n.y]=t},isVisited:function(e,t){return t.x+"-"+t.y in e.visitedSquares},changeDirection:function(e){return changeDirectionDegrees(e,-90)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,t,n,o)},reachableSquares:function(e){return[getPoint(e.x+1,e.y-2),getPoint(e.x+2,e.y-1),getPoint(e.x+2,e.y+1),getPoint(e.x+1,e.y+2),getPoint(e.x-1,e.y-2),getPoint(e.x-2,e.y-1),getPoint(e.x-2,e.y+1),getPoint(e.x-1,e.y+2)]},isSquare:function(e){const t=Math.sqrt(e);return t==Math.trunc(t)}}}];function isComputationComplete(){return 0==windowCalc.xPixelChunks.length}function computeBoundPoints(e){runWindowBoundPointsCalculators(e)}function runWindowBoundPointsCalculators(e){const t=Math.round(windowCalc.lineWidth),n=dContext.canvas.width;var o=128;64==t||32==t?o=1:16==t?o=32:8!=t&&4!=t||(o=64);var i,r=n/o;i=Math.trunc(r/t)+1;for(var a=0,s=[],l=0;l<n;l+=t)++a>i&&(windowCalc.xPixelChunks.push(s),a=1,s=[]),s.push(l);windowCalc.xPixelChunks.push(s),windowCalc.totalChunks=windowCalc.xPixelChunks.length,waitAndDrawWindow()}function computeBoundPointsChunk(e,t){var n=Date.now();const o=e.privContext;var i=[];const r=createInfNum(Math.round(windowCalc.lineWidth).toString()),a=createInfNum(dContext.canvas.height.toString());for(var s=0,l=0,c=infNum(0n,0n),u=0;u<t.length;u++){c=infNum(BigInt(t[u]),0n),s=infNumAdd(infNumMul(windowCalc.eachPixUnits,c),windowCalc.leftEdge);for(var m=infNum(0n,0n);infNumLt(m,a);){l=infNumSub(windowCalc.topEdge,infNumMul(windowCalc.eachPixUnits,m));const t=infNumToString(s)+","+infNumToString(l);if(t in windowCalc.pointsCache)windowCalc.cachedPoints++,windowCalc.pointsCache[t].px.x=parseInt(infNumToString(c)),windowCalc.pointsCache[t].px.y=parseInt(infNumToString(m)),i.push(windowCalc.pointsCache[t]);else{const n=e.computeBoundPointColor(o,s,l);let r={px:getColorPoint(parseInt(infNumToString(c)),parseInt(infNumToString(m)),n),pt:{x:copyInfNum(s),y:copyInfNum(l)}};windowCalc.pointsCache[t]=r,i.push(r)}m=infNumAdd(m,r)}}return windowCalc.passTimeMs+=Date.now()-n,windowCalc.totalPoints+=i.length,windowCalc.chunksComplete++,{points:i}}const presets=[{plot:"Mandelbrot-set",v:4,n:400,lineWidth:1,scale:createInfNum("1640000"),centerX:createInfNum("0.273210669156851807493494"),centerY:createInfNum("-0.00588612373984032474800031"),lineColor:"rbgyo",bgColor:"b"},{plot:"Primes-1-Step-90-turn",v:4,n:6e4,lineWidth:1,scale:createInfNum("1.35"),centerX:createInfNum("-240"),centerY:createInfNum("288.4"),lineColor:"rbgyo",bgColor:"b"},{plot:"Trapped-Knight",v:4,n:2016,lineWidth:1.5,scale:createInfNum("15.0"),centerX:createInfNum("0"),centerY:createInfNum("0"),lineColor:"rbgyo",bgColor:"b"},{plot:"Primes-1-Step-45-turn",v:4,n:32400,lineWidth:2,scale:createInfNum("10.95"),centerX:createInfNum("35"),centerY:createInfNum("100"),lineColor:"rbgyo",bgColor:"b"}];for(var menuHtml="<div class='plot-desc'><b>Presets:</b>",i=0;i<presets.length;i++)menuHtml+="<button style='float:none; margin:0.5rem; width:2.0rem;' class='preset-view-btn' id='preset-view-btn-"+(i+1)+"'>"+(i+1)+"</button>";menuHtml+="</div>";const plotsByName={};for(i=0;i<plots.length;i++)plotsByName[plots[i].name]=plots[i],menuHtml+="<div class='plot-desc'><button class='plot-view-btn' id='plot-view-btn-"+i+"'>View</button><b>"+plots[i].name+"</b><br/>"+plots[i].desc+"</div>";document.getElementById("menu-contents").innerHTML=menuHtml;const viewButtons=document.getElementsByClassName("plot-view-btn");var activatePlotHandler=function(e){var t=parseInt(e.target.id.split("-")[3]);t>=plots.length&&(t=0);const n=plots[t].name;if(n!=historyParams.plot){var o=Object.assign(historyParams,plots[t].forcedDefaults);o.plot=n,replaceHistoryWithParams(o),parseUrlParams(),start()}};for(i=0;i<viewButtons.length;i++)viewButtons[i].addEventListener("click",activatePlotHandler);function activatePreset(e){replaceHistoryWithParams(e),parseUrlParams(),start()}const presetButtons=document.getElementsByClassName("preset-view-btn");var activatePresetHandler=function(e){var t=parseInt(e.target.id.split("-")[3])-1;(t<0||t>=presets.length)&&(t=0),activatePreset(presets[t])};for(i=0;i<presetButtons.length;i++)presetButtons[i].addEventListener("click",activatePresetHandler);function changeDirectionDegrees(e,t){for(var n=e+t;n<0;)n+=360;for(;n>=360;)n-=360;return n}function computeNextPointDegrees(e,t,n,o){return 0==e?getPoint(n+t,o):45==e?getPoint(n+t,o+t):90==e?getPoint(n,o+t):135==e?getPoint(n-t,o+t):180==e?getPoint(n-t,o):getPoint(225==e?n-t:270==e?n:n+t,o-t)}function isPrime(e){if(e<2)return!1;const t=Math.sqrt(e);for(var n=2;n<=t;n++)if(e%n==0)return!1;return!0}function getPoint(e,t){return{x:e,y:t}}function getColor(e,t,n){return{r:e,g:t,b:n}}function getColorPoint(e,t,n){return{x:e,y:t,c:n}}function parseUrlParams(){var e=new URLSearchParams(document.location.search),t={plot:"Mandelbrot-set",v:4,lineWidth:1,n:40,scale:infNum(400n,0n),centerX:createInfNum("-0.65"),centerY:infNum(0n,0n),lineColor:"rbgyo",bgColor:"b"};if(e.has("v")&&["1","2","3","4"].includes(e.get("v"))){let n=t.plot;if(["1","2","3"].includes(e.get("v"))&&e.has("seq")?n=e.get("seq"):["4"].includes(e.get("v"))&&e.has("plot")&&(n=e.get("plot")),n in plotsByName?t.plot=n:alert("no such plot ["+n+"]"),e.has("n")&&(t.n=parseInt(e.get("n").replaceAll(",","")),t.n<0&&(t.n=100)),e.has("scale")&&(t.scale=createInfNum(e.get("scale").replaceAll(",",""))),1==e.get("v"))t.centerX=infNum(0n,0n),t.centerY=infNum(0n,0n);else if(e.has("centerX")&&(t.centerX=createInfNum(e.get("centerX").replaceAll(",",""))),e.has("centerY")){let n=createInfNum(e.get("centerY").replaceAll(",",""));2==e.get("v")&&(n=infNumMul(infNum(-1n,0n),n)),t.centerY=n}if(e.has("lineColor")){const n=e.get("lineColor");n in lineColorSchemes?t.lineColor=n:alert("no such line color scheme ["+n+"]")}if(e.has("bgColor")){const n=e.get("bgColor");n in bgColorSchemes?t.bgColor=n:alert("no such background color scheme ["+n+"]")}e.has("lineWidth")&&(t.lineWidth=sanityCheckLineWidth(parseFloat(e.get("lineWidth"))||1,!1,plotsByName[t.plot]))}console.log(t),historyParams=t}function indicateActivePlot(){const e=document.getElementsByClassName("plot-view-btn");for(var t=0;t<e.length;t++)plots[t].name==historyParams.plot?(e[t].innerHTML="Active",e[t].parentNode.classList.add("active-plot")):(e[t].innerHTML="View",e[t].parentNode.classList.remove("active-plot"))}function start(){null!=windowCalc.timeout&&window.clearTimeout(windowCalc.timeout),points.length=0;const e=historyParams;if(!e.plot in plotsByName)return void console.log("invalid plot parameter: no such plot ["+e.plot+"]");indicateActivePlot(),setDScaleVars(dContext);const t=plotsByName[e.plot];if("sequence"==t.calcFrom){const o=t.computePointsAndLength(t.privContext);totalLength=o.length;for(var n=0;n<o.points.length;n++)points.push(o.points[n]);resetWindowCalcContext(),drawPoints(e)}else"window"==t.calcFrom?(resetWindowCalcCache(),resetWindowCalcContext(),calculateAndDrawWindow()):alert('Unexpected "calcFrom" field for the plot: ['+t.calcFrom+"]")}const bgColorSchemes={b:"rgba(0,0,0,1.0)",g:"rgba(51,51,51,1.0)",w:"rgba(255,255,255,1.0)"},bgColorSchemeNames=[];for(let e in bgColorSchemes)bgColorSchemeNames.push(e);function getBgColor(){return historyParams.bgColor in bgColorSchemes?bgColorSchemes[historyParams.bgColor]:"rgba(0,0,0,1.0)"}function fillBg(e){var t=e.canvas;e.fillStyle=getBgColor(),e.fillRect(0,0,t.width,t.height)}function setDScaleVars(e){var t=e.canvas;t.width==t.offsetWidth&&t.height==t.offsetHeight||(t.width=t.offsetWidth,t.height=t.offsetHeight,fillBg(e))}function replaceHistoryWithParams(e){var t=Object.assign({},e);t.scale=infNumToString(infNumTruncate(e.scale)),t.centerX=infNumToString(infNumTruncate(e.centerX)),t.centerY=infNumToString(infNumTruncate(e.centerY)),history.replaceState("",document.title,document.location.pathname+"?"+new URLSearchParams(t).toString()),replaceStateTimeout=null}var replaceHistory=function(){replaceHistoryWithParams(historyParams)},pushToHistory=function(){var e=Object.assign({},historyParams);e.scale=infNumToString(infNumTruncate(historyParams.scale)),e.centerX=infNumToString(infNumTruncate(historyParams.centerX)),e.centerY=infNumToString(infNumTruncate(historyParams.centerY)),history.pushState("",document.title,document.location.pathname+"?"+new URLSearchParams(e).toString()),historyTimeout=null};const lineColorSchemes={rby:function(e){if(e<.5){const t=parseInt(2*e*240);return"rgba("+(240-t)+",0,"+t+",1.0)"}{const t=240-parseInt(2*(e-.5)*240);return"rgba("+(240-t)+","+(240-t)+","+t+",1.0)"}},rbgyo:function(e){if(e<.25){const t=parseInt(4*e*240);return"rgba("+(240-t)+",0,"+t+",1.0)"}if(e<.5){const t=parseInt(4*(e-.25)*240);return"rgba(0,"+t+","+(240-t)+",1.0)"}if(e<.75){return"rgba("+(240-(240-parseInt(4*(e-.5)*240)))+",240,0,1.0)"}return"rgba(240,"+(240-parseInt(4*(e-.75)*240)/2)+",0,1.0)"},br:function(e){const t=parseInt(240*e);return"rgba("+t+",0,"+(240-t)+",1.0)"},by:function(e){const t=parseInt(240*e);return"rgba("+t+","+t+","+(240-t)+",1.0)"},op:function(e){const t=parseInt(240*e);return"rgba(240,"+(120-t/2)+","+t+",1.0)"},lgdg:function(e){const t=parseInt(150*e);return"rgba("+(200-t)+","+(200-t)+","+(200-t)+",1.0)"},r:function(e){const t=200-parseInt(80*e);return"rgba("+t+","+.2*t+","+.2*t+",1.0)"},o:function(e){const t=200-parseInt(80*e);return"rgba("+t+","+.5*t+",0,1.0)"},y:function(e){const t=200-parseInt(80*e);return"rgba("+t+","+t+",0,1.0)"},g:function(e){const t=200-parseInt(80*e);return"rgba("+.1*t+","+t+","+.1*t+",1.0)"},b:function(e){const t=200-parseInt(80*e);return"rgba("+.1*t+","+.1*t+","+t+",1.0)"},p:function(e){const t=200-parseInt(80*e);return"rgba("+t+","+.1*t+","+t+",1.0)"},dg:function(e){const t=60-parseInt(30*e);return"rgba("+t+","+t+","+t+",1.0)"},lg:function(e){const t=200-parseInt(80*e);return"rgba("+t+","+t+","+t+",1.0)"}},lineColorSchemeNames=[];for(let e in lineColorSchemes)lineColorSchemeNames.push(e);function getLineColor(e,t){return t in lineColorSchemes?lineColorSchemes[t](e):"rgba(200,200,200,1.0)"}function redraw(){resetWindowCalcContext();const e=plotsByName[historyParams.plot];"sequence"==e.calcFrom?drawPoints(historyParams):"window"==e.calcFrom&&calculateAndDrawWindow()}function infNumToFloat(e){return parseFloat(infNumToString(e))}function drawPoints(e){null!=replaceStateTimeout&&window.clearTimeout(replaceStateTimeout),replaceStateTimeout=window.setTimeout(replaceHistory,250);const t=e.lineWidth,n=infNumToFloat(e.scale);fillBg(dContext),console.log("drawing ["+points.length+"] points with a total length of ["+totalLength+"]");var o=0,i=totalLength*n,r=(0-windowCalc.leftEdgeFloat)*n,a=(windowCalc.topEdgeFloat-0)*n,s=0,l=0;dContext.lineWidth=t,dContext.lineCap="round",dContext.lineJoin="round";for(var c=0;c<points.length;c++){var u=(points[c].x-windowCalc.leftEdgeFloat)*n,m=(windowCalc.topEdgeFloat-points[c].y)*n;c>0&&(l=m-a,o+=0==(s=u-r)?Math.abs(l):0==l?Math.abs(s):Math.hypot(s,l)),dContext.beginPath(),dContext.moveTo(r,a),dContext.strokeStyle=getLineColor(o/i,e.lineColor),dContext.lineTo(u,m),dContext.stroke(),r=u,a=m}}function resetWindowCalcCache(){console.log("purging window points cache"),windowCalc.pointsCache={}}function resetWindowCalcContext(){null!=windowCalc.timeout&&window.clearTimeout(windowCalc.timeout),fillBg(dContext);const e=historyParams;windowCalc.plotName=e.plot,"adjustTruncate"in plotsByName[e.plot].privContext&&plotsByName[e.plot].privContext.adjustTruncate(),windowCalc.lineWidth=128,windowCalc.pixelsImage=dContext.createImageData(dContext.canvas.width,dContext.canvas.height),windowCalc.xPixelChunks=[],windowCalc.resultPoints=[],windowCalc.pointsBounds="",windowCalc.passTimeMs=0,windowCalc.totalTimeMs=0,windowCalc.startTimeMs=Date.now(),windowCalc.endTimeMs=0,windowCalc.totalPoints=0,windowCalc.cachedPoints=0,windowCalc.chunksComplete=0,windowCalc.totalChunks=0;const t=infNum(2n,0n),n=createInfNum(dContext.canvas.offsetWidth.toString()),o=createInfNum(dContext.canvas.offsetHeight.toString());windowCalc.eachPixUnits=infNumDiv(infNum(1n,0n),e.scale);const i=infNumDiv(n,e.scale),r=infNumSub(e.centerX,infNumDiv(infNumDiv(n,t),e.scale)),a=infNumAdd(r,i),s=infNumDiv(o,e.scale),l=infNumAdd(e.centerY,infNumDiv(infNumDiv(o,t),e.scale)),c=infNumSub(l,s);windowCalc.n==e.n&&infNumEq(windowCalc.scale,e.scale)||resetWindowCalcCache(),windowCalc.n=e.n,windowCalc.scale=e.scale,windowCalc.leftEdge=r,windowCalc.topEdge=l,windowCalc.rightEdge=a,windowCalc.bottomEdge=c,windowCalc.leftEdgeFloat=infNumToFloat(r),windowCalc.topEdgeFloat=infNumToFloat(l),resetGoToBoundsValues(),resetGoToCenterValues()}function resetGoToBoundsValues(){var e=!1;"usesImaginaryCoordinates"in plotsByName[historyParams.plot].privContext&&(e=plotsByName[historyParams.plot].privContext.usesImaginaryCoordinates),inputGotoTopLeftX.value=windowCalc.leftEdgeFloat,inputGotoTopLeftY.value=windowCalc.topEdgeFloat+(e?"i":""),inputGotoBotRightX.value=infNumToFloat(windowCalc.rightEdge),inputGotoBotRightY.value=infNumToFloat(windowCalc.bottomEdge)+(e?"i":"")}function resetGoToCenterValues(){var e=!1;"usesImaginaryCoordinates"in plotsByName[historyParams.plot].privContext&&(e=plotsByName[historyParams.plot].privContext.usesImaginaryCoordinates),inputGotoCenterX.value=infNumToFloat(historyParams.centerX),inputGotoCenterY.value=infNumToFloat(historyParams.centerY)+(e?"i":""),inputGotoScale.value=infNumToFloat(historyParams.scale)}function replaceAllEachChar(e,t,n){var o=e;for(let e=0;e<t.length;e++)o=o.replaceAll(t.charAt(e),n);return o}function applyGoToBoundsValues(){let e,t,n,o;try{e=createInfNum(inputGotoTopLeftX.value.replaceAll(",",""))}catch(e){return void alert("Invalid top left x value")}try{t=createInfNum(inputGotoBotRightX.value.replaceAll(",",""))}catch(e){return void alert("Invalid bottom right x value")}if(infNumGe(e,t))return void alert("Top left x value must be less than bottom right x value");try{n=createInfNum(replaceAllEachChar(inputGotoTopLeftY.value,",iI ",""))}catch(e){return void alert("Invalid top left x value")}try{o=createInfNum(replaceAllEachChar(inputGotoBotRightY.value,",iI ",""))}catch(e){return void alert("Invalid bottom right x value")}if(infNumGe(o,n))return void alert("Bottom left y value must be less than top left y value");const i=infNumSub(t,e),r=infNumSub(n,o),a=infNumAdd(e,infNumDiv(i,infNum(2n,0n))),s=infNumAdd(o,infNumDiv(r,infNum(2n,0n))),l=infNumDiv(createInfNum(dCanvas.width.toString()),i),c=infNumDiv(createInfNum(dCanvas.height.toString()),r);console.log("X spans ["+infNumToString(i)+"] units, thus ["+infNumToString(l)+"] pixels/unit"),console.log("Y spans ["+infNumToString(r)+"] units, thus ["+infNumToString(c)+"] pixels/unit");var u=l;infNumLt(c,l)&&(u=c),console.log("going with scale of ["+infNumToString(u)+"]"),historyParams.centerX=a,historyParams.centerY=s,historyParams.scale=u,redraw()}function applyGoToCenterValues(){try{historyParams.centerX=createInfNum(inputGotoCenterX.value.replaceAll(",",""))}catch(e){return void alert("Invalid center x value")}try{historyParams.centerY=createInfNum(replaceAllEachChar(inputGotoCenterY.value,",iI ",""))}catch(e){return void alert("Invalid center y value")}try{historyParams.scale=createInfNum(inputGotoScale.value.replaceAll(",",""))}catch(e){return void alert("Invalid scale value")}redraw()}function textInputHasFocus(){var e=!1;for(let t=0;t<inputFields.length;t++)if(inputFields[t]===document.activeElement){e=!0;break}return e}function calculateAndDrawWindow(){128==windowCalc.lineWidth?calculateAndDrawWindowInner():(drawCalculatingNotice(dContext),window.setTimeout(calculateAndDrawWindowInner,50))}function calculateAndDrawWindowInner(){const e=historyParams,t=plotsByName[e.plot],n=Math.round(e.lineWidth),o=Math.round(windowCalc.lineWidth/2);windowCalc.lineWidth=o<=n?n:o,computeBoundPoints(t.privContext)}function waitAndDrawWindow(){const e=plotsByName[windowCalc.plotName];var t=windowCalc.xPixelChunks.shift();const n=isComputationComplete();if(t){drawColorPoints(computeBoundPointsChunk(e,t).points),n||drawCalculatingNotice(dContext)}if(null!=windowCalc.timeout&&window.clearTimeout(windowCalc.timeout),!n)return void(windowCalc.timeout=window.setTimeout(waitAndDrawWindow,25));{windowCalc.totalTimeMs+=windowCalc.passTimeMs;let e=Math.round(1e4*windowCalc.cachedPoints/windowCalc.totalPoints)/100;console.log("computing ["+windowCalc.totalPoints+"] points of width ["+windowCalc.lineWidth+"], of which ["+windowCalc.cachedPoints+"] were cached ("+e+"%), took ["+windowCalc.passTimeMs+"] ms")}if(Math.round(windowCalc.lineWidth)>Math.round(historyParams.lineWidth))return windowCalc.chunksComplete=0,void(windowCalc.timeout=window.setTimeout(calculateAndDrawWindow,250));{windowCalc.endTimeMs=Date.now();const e=windowCalc.endTimeMs-windowCalc.startTimeMs;if(console.log("COMPLETED image [w:"+dCanvas.width+", h:"+dCanvas.height+", lineWidth:"+Math.round(historyParams.lineWidth)+", n:"+historyParams.n+", centerX:"+infNumToString(infNumTruncate(historyParams.centerX))+", centerY:"+infNumToString(infNumTruncate(historyParams.centerY))+", scale:"+infNumToString(infNumTruncate(historyParams.scale))+"] took: ["+e+"] ms of overall time, ["+windowCalc.totalTimeMs+"] ms of compute/draw time, ["+(e-windowCalc.totalTimeMs)+"] ms of idle/wait time"),windowCalcRepeat>1)windowCalcTimes.push(e),windowCalcRepeat-=1,resetWindowCalcCache(),redraw();else{windowCalcTimes.push(e);let t=0,n=0;for(let e=0;e<windowCalcTimes.length;e++)windowCalcTimes[e]>t&&(t=windowCalcTimes[e]),(0==n||windowCalcTimes[e]<n)&&(n=windowCalcTimes[e]);let o=0,i=0;for(let e=0;e<windowCalcTimes.length;e++)windowCalcTimes[e]!=t&&windowCalcTimes[e]!=n&&(o+=windowCalcTimes[e],i++);i>0&&console.log("excluding max ["+t+"] and min ["+n+"], the average overall time of ["+i+"] images was ["+o/i+"] ms")}}let o=0,i=[];for(let e in windowCalc.pointsCache)infNumLt(windowCalc.pointsCache[e].pt.x,windowCalc.leftEdge)||infNumGt(windowCalc.pointsCache[e].pt.x,windowCalc.rightEdge)||infNumLt(windowCalc.pointsCache[e].pt.y,windowCalc.bottomEdge)||infNumGt(windowCalc.pointsCache[e].pt.y,windowCalc.topEdge)?i.push(e):o++;for(let e=0;e<i.length;e++)delete windowCalc.pointsCache[name];const r=Math.round(1e4*i.length/(i.length+o))/100;console.log("deleted ["+i.length+"] points from the cache ("+r+"%)")}function drawColorPoints(e){null!=replaceStateTimeout&&window.clearTimeout(replaceStateTimeout),replaceStateTimeout=window.setTimeout(replaceHistory,250);const t=Math.round(windowCalc.lineWidth),n=dContext.canvas,o=n.width,i=n.height,r=windowCalc.pixelsImage;for(let n=0;n<e.length;n++){const a=e[n].px.x,s=e[n].px.y,l=e[n].px.c;let c=getBgColor();if(-2==l)continue;l>=0&&(c=getLineColor(l,historyParams.lineColor));const u=c.substr(5).split(",");c=getColor(parseInt(u[0]),parseInt(u[1]),parseInt(u[2]));let m=0;for(let e=0;e<t&&!(a+e>=o);e++)for(let n=0;n<t&&!(s+n>=i);n++)m=4*((s+n)*o+(a+e)),r.data[m+0]=c.r,r.data[m+1]=c.g,r.data[m+2]=c.b,r.data[m+3]=255}dContext.putImageData(r,0,0)}function drawCalculatingNotice(e){const t=e.canvas;e.fillStyle="rgba(100,100,100,1.0)";const n=Math.max(24,.03*t.height),o=Math.round(.6*n),i=Math.max(200,18*o);e.fillRect(0,t.height-n,i,n),e.font=o+"px system-ui",e.fillStyle="rgba(0,0,0,0.9)";const r=Math.round(100*windowCalc.chunksComplete/windowCalc.totalChunks);e.fillText("Calculating "+windowCalc.lineWidth+"-wide pixels ("+r+"%) ...",Math.round(.2*n),t.height-Math.round(.2*n))}function drawMousePosNotice(e,t){const n=dCanvas,o=dContext;o.fillStyle="rgba(100,100,100,1.0)";const i=Math.max(24,.03*n.height),r=Math.round(.6*i),a=Math.max(200,18*r);o.fillRect(0,n.height-i,a,i),o.font=r+"px system-ui",o.fillStyle="rgba(0,0,0,0.9)";let s=Math.round(100*e)/100,l=Math.round(100*t)/100;o.fillText("("+s+", "+l+")",Math.round(.2*i),n.height-Math.round(.2*i))}function panPercentOfPixels(e,t){const n=e?dCanvas.width:dCanvas.height,o=infNumMul(createInfNum(Math.round(n*t).toString()),windowCalc.eachPixUnits);e?historyParams.centerX=infNumAdd(historyParams.centerX,o):historyParams.centerY=infNumAdd(historyParams.centerY,o)}function applyParamPercent(e,t){if(!e in historyParams)return void console.log("unknown params field ["+e+"]");const n=createInfNum(t);if(infNumLe(n,infNum(0n,0n)))return void console.log("cannot apply a zero or negative percentage to field ["+e+"]");const o=infNumMul(historyParams[e],n);historyParams[e]=o}function sanityCheckLineWidth(e,t,n){if(e<.5)return.5;if("window"==n.calcFrom){if(e>64)return t?.5:64}else if(e>20)return t?.5:20;return e}btnGotoBoundsGo.addEventListener("click",applyGoToBoundsValues),btnGotoBoundsReset.addEventListener("click",resetGoToBoundsValues),btnGotoCenterGo.addEventListener("click",applyGoToCenterValues),btnGotoCenterReset.addEventListener("click",resetGoToCenterValues),window.addEventListener("keyup",(function(e){16!=e.keyCode&&"Shift"!=e.key||(shiftPressed=!1)}));var dispatchCorrespondingKeydownEvent=function(e){let t=e.target.id.substring(4),n=new KeyboardEvent("keydown",{key:t});window.dispatchEvent(n)};const kbdElements=document.getElementsByTagName("kbd");for(let e=0;e<kbdElements.length;e++)kbdElements[e].id.startsWith("kbd-")&&kbdElements[e].addEventListener("click",dispatchCorrespondingKeydownEvent);window.addEventListener("keydown",(function(e){if(!textInputHasFocus())if(16==e.keyCode||"Shift"==e.key)shiftPressed=!0;else if(39==e.keyCode||"ArrowRight"==e.key)panPercentOfPixels(!0,-.01),redraw();else if(68==e.keyCode||"d"==e.key||"D"==e.key)panPercentOfPixels(!0,-.1),redraw();else if(37==e.keyCode||"ArrowLeft"==e.key)panPercentOfPixels(!0,.01),redraw();else if(65==e.keyCode||"a"==e.key||"A"==e.key)panPercentOfPixels(!0,.1),redraw();else if(38==e.keyCode||"ArrowUp"==e.key)panPercentOfPixels(!1,.01),redraw();else if(87==e.keyCode||"w"==e.key||"W"==e.key)panPercentOfPixels(!1,.1),redraw();else if(40==e.keyCode||"ArrowDown"==e.key)panPercentOfPixels(!1,-.01),redraw();else if(83==e.keyCode||"s"==e.key||"S"==e.key)panPercentOfPixels(!1,-.1),redraw();else if(61==e.keyCode||107==e.keyCode||"+"==e.key)applyParamPercent("scale","1.01"),redraw();else if(173==e.keyCode||109==e.keyCode||"-"==e.key)applyParamPercent("scale","0.99"),infNumLt(historyParams.scale,infNum(1n,-2n))&&(historyParams.scale=createInfNum("0.01")),redraw();else if(69==e.keyCode||"e"==e.key||"E"==e.key)applyParamPercent("scale","1.05"),redraw();else if(81==e.keyCode||"q"==e.key||"Q"==e.key)applyParamPercent("scale","0.95"),infNumLt(historyParams.scale,infNum(0n,0n))&&(historyParams.scale=createInfNum("0.01")),redraw();else if(67==e.keyCode||"c"==e.key||"C"==e.key)historyParams.centerX=createInfNum("0"),historyParams.centerY=createInfNum("0"),redraw();else if(77==e.keyCode||"m"==e.key||"M"==e.key)"sequence"==plotsByName[historyParams.plot].calcFrom?historyParams.n+=500:historyParams.n+=100,start();else if(78==e.keyCode||"n"==e.key||"N"==e.key)"sequence"==plotsByName[historyParams.plot].calcFrom?historyParams.n>100&&(historyParams.n-=100):historyParams.n>10&&(historyParams.n-=10),start();else if(86==e.keyCode||"v"==e.key||"V"==e.key){let e=-1;for(let t=0;t<lineColorSchemeNames.length;t++)if(lineColorSchemeNames[t]==historyParams.lineColor){e=t;break}e+=1,e>=lineColorSchemeNames.length&&(e=0),historyParams.lineColor=lineColorSchemeNames[e],redraw()}else if(66==e.keyCode||"b"==e.key||"B"==e.key){let e=-1;for(let t=0;t<bgColorSchemeNames.length;t++)if(bgColorSchemeNames[t]==historyParams.bgColor){e=t;break}e+=1,e>=bgColorSchemeNames.length&&(e=0),historyParams.bgColor=bgColorSchemeNames[e],redraw()}else if(88==e.keyCode||"x"==e.key||"X"==e.key){let e=-1;for(let t=0;t<plots.length;t++)if(plots[t].name==historyParams.plot){e=t;break}e+=1,e>=plots.length&&(e=0),historyParams.plot=plots[e].name,replaceHistoryWithParams(Object.assign(historyParams,plots[e].forcedDefaults)),parseUrlParams(),start()}else if(90==e.keyCode||"z"==e.key||"Z"==e.key){let e=Math.round(100*historyParams.lineWidth);e+=50,historyParams.lineWidth=parseFloat(e/100),historyParams.lineWidth=sanityCheckLineWidth(historyParams.lineWidth,!0,plotsByName[historyParams.plot]),"window"==plotsByName[historyParams.plot].calcFrom?start():redraw()}else 72==e.keyCode||"h"==e.key||"H"==e.key?helpVisible?closeHelpMenu():openHelpMenu():80==e.keyCode||"p"==e.key||"P"==e.key?menuVisible?closeMenu():openMenu():49==e.keyCode||97==e.keyCode||"1"==e.key?activatePreset(presets[0]):50==e.keyCode||98==e.keyCode||"2"==e.key?activatePreset(presets[1]):51==e.keyCode||99==e.keyCode||"3"==e.key?activatePreset(presets[2]):52!=e.keyCode&&100!=e.keyCode&&"4"!=e.key||activatePreset(presets[3])})),window.addEventListener("resize",(function(){null!==resizeTimeout&&window.clearTimeout(resizeTimeout),resizeTimeout=window.setTimeout((function(){setDScaleVars(dContext),redraw()}),500)}));var mouseDownHandler=function(e){if(e.preventDefault(),shiftPressed){let t=createInfNum(Math.round(e.pageX-dCanvas.width/2).toString()),n=createInfNum(Math.round(dCanvas.height-e.pageY-dCanvas.height/2).toString()),o=infNumAdd(infNumMul(t,windowCalc.eachPixUnits),historyParams.centerX),i=infNumAdd(infNumMul(n,windowCalc.eachPixUnits),historyParams.centerY);return historyParams.centerX=o,historyParams.centerY=i,void redraw()}"touches"in e&&"1"in e.touches&&(pinch=!0,pinchStartDist=Math.hypot(e.touches[0].pageX-e.touches[1].pageX,e.touches[0].pageY-e.touches[1].pageY)),mouseDrag=!0,mouseDragX=e.pageX,mouseDragY=e.pageY};dCanvas.addEventListener("mousedown",mouseDownHandler),dCanvas.addEventListener("touchstart",mouseDownHandler);var mouseMoveHandler=function(e){if(e.preventDefault(),!mouseDrag){if(showMousePosition){let t=createInfNum(e.pageX.toString()),n=createInfNum(e.pageY.toString()),o=infNumAdd(infNumDiv(t,historyParams.scale),windowCalc.leftEdge),i=infNumSub(windowCalc.topEdge,infNumDiv(n,historyParams.scale));drawMousePosNotice(infNumToFloat(o),infNumToFloat(i))}return}const t=e.pageX,n=e.pageY,o=infNumMul(createInfNum((mouseDragX-t).toString()),windowCalc.eachPixUnits),i=infNumMul(createInfNum((mouseDragY-n).toString()),windowCalc.eachPixUnits);if(historyParams.centerX=infNumAdd(historyParams.centerX,o),historyParams.centerY=infNumSub(historyParams.centerY,i),mouseDragX=t,mouseDragY=n,"touches"in e&&"1"in e.touches){const t=(e.touches[0].pageX+e.touches[1].pageX)/2,n=(e.touches[0].pageY+e.touches[1].pageY)/2,o=historyParams.scale,i=Math.hypot(e.touches[0].pageX-e.touches[1].pageX,e.touches[0].pageY-e.touches[1].pageY),r=i/pinchStartDist;pinchStartDist=i;const a=infNumMul(historyParams.scale,createInfNum(r.toString())),s=createInfNum("500"),l=createInfNum("0.00005");"sequence"==plotsByName[historyParams.plot].calcFrom?infNumLt(a,l)?historyParams.scale=l:infNumGt(a,s)?historyParams.scale=s:historyParams.scale=a:historyParams.scale=a;const c=calculateNewZoomCenterX(createInfNum(t.toString()),createInfNum(dCanvas.width.toString()),historyParams.centerX,o,historyParams.scale),u=calculateNewZoomCenterY(createInfNum(n.toString()),createInfNum(dCanvas.height.toString()),historyParams.centerY,o,historyParams.scale);historyParams.centerX=c,historyParams.centerY=u}redraw()};dCanvas.addEventListener("mousemove",mouseMoveHandler),dCanvas.addEventListener("touchmove",mouseMoveHandler);var mouseUpHandler=function(e){e.preventDefault(),mouseDrag=!1,pinch=!1};function calculateNewZoomCenterX(e,t,n,o,i){const r=infNumSub(n,infNumDiv(infNumDiv(t,infNum(2n,0n)),o)),a=infNumAdd(infNumDiv(e,o),r),s=infNumDiv(o,i);return infNumAdd(infNumSub(a,infNumMul(a,s)),infNumMul(n,s))}function calculateNewZoomCenterY(e,t,n,o,i){const r=infNumSub(infNumAdd(n,infNumDiv(infNumDiv(t,infNum(2n,0n)),o)),infNumDiv(e,o)),a=infNumDiv(o,i);return infNumAdd(infNumSub(infNumMul(n,a),infNumMul(r,a)),r)}function closeMenu(){menuVisible=!1,hideFooter(),document.getElementById("menu").style.display="none",document.getElementById("menu-open-wrap").style.display="block"}function openMenu(){menuVisible=!0,closeHelpMenu(),showFooter(),document.getElementById("menu").style.display="block",document.getElementById("menu-open-wrap").style.display="none"}function closeHelpMenu(){helpVisible=!1,hideFooter(),document.getElementById("help-menu").style.display="none",document.getElementById("menu-open-wrap").style.display="block"}function openHelpMenu(){closeMenu(),showFooter(),helpVisible=!0,document.getElementById("help-menu").style.display="block",document.getElementById("menu-open-wrap").style.display="none"}function showFooter(){document.getElementById("footer").style.display="block"}function hideFooter(){document.getElementById("footer").style.display="none"}dCanvas.addEventListener("mouseup",mouseUpHandler),dCanvas.addEventListener("touchend",mouseUpHandler),dCanvas.addEventListener("wheel",(function(e){const t=historyParams.scale;var n=createInfNum((1+e.wheelDeltaY/48*.05).toString());infNumLt(n,createInfNum("0"))&&(console.log("NEGATIVE scale factor would have been applied: ["+infNumToString(n)+"]"),n=createInfNum("0.05"));const o=infNumMul(historyParams.scale,n),i=createInfNum("500"),r=createInfNum("0.00005");"sequence"==plotsByName[historyParams.plot].calcFrom?infNumLt(o,r)?historyParams.scale=r:infNumGt(o,i)?historyParams.scale=i:historyParams.scale=o:historyParams.scale=o;const a=calculateNewZoomCenterX(createInfNum(e.pageX.toString()),createInfNum(dCanvas.width.toString()),historyParams.centerX,t,historyParams.scale),s=calculateNewZoomCenterY(createInfNum(e.pageY.toString()),createInfNum(dCanvas.height.toString()),historyParams.centerY,t,historyParams.scale);historyParams.centerX=a,historyParams.centerY=s,redraw()})),document.getElementById("menu-open").addEventListener("click",(function(e){openMenu()}),!0),document.getElementById("menu-close").addEventListener("click",(function(e){closeMenu(),closeHelpMenu()}),!0),document.getElementById("help-menu-open").addEventListener("click",(function(e){openHelpMenu()}),!0),document.getElementById("help-menu-close").addEventListener("click",(function(e){closeHelpMenu()}),!0),parseUrlParams(),start();