// as of 2021-11-09, minify with https://codebeautify.org/minify-js
const forceWorkerReloadUrlParam="force-worker-reload=true",forceWorkerReload=self.location.toString().includes(forceWorkerReloadUrlParam);forceWorkerReload?(importScripts("infnum.js?force-worker-reload=true&t="+Date.now()),importScripts("plots.js?force-worker-reload=true&t="+Date.now())):(importScripts("infnum.js"),importScripts("plots.js"));const plotsByName={};for(let e=0;e<plots.length;e++)plotsByName[plots[e].name]=plots[e];self.onmessage=function(e){computeChunk(e.data.plotId,e.data.chunk,e.data.cachedIndices)};var computeChunk=function(e,o,r){let t=o.chunkPos.x,n=o.chunkPos.y,l=o.chunkInc.y;const c=plotsByName[o.plot].computeBoundPointColor;let s=normInfNum(n,l);n=s[0],l=s[1];const u=new Array(o.chunkLen);if(r.length<o.chunkLen)for(let e=0;e<o.chunkLen;e++)binarySearchIncludesNumber(r,e)||(u[e]=c(o.chunkN,o.chunkPrecision,o.useFloat,t,n)),n=infNumAddNorm(n,l);o.results=u,o.plotId=e,postMessage(o)};function binarySearchIncludesNumber(e,o){let r=0,t=e.length-1,n=null,l=null;for(;r<=t;)if(n=r+t>>1,l=o-e[n],l>0)r=n+1;else{if(!(l<0))return!0;t=n-1}return!1}