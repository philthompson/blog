const points=[];var totalLength=0;const dCanvas=document.getElementById("dc");const dContext=dCanvas.getContext("2d");const fitSizeCanvas=document.getElementById("fit-size-canvas");const fitSizeContext=fitSizeCanvas.getContext("2d");var fullSizeScalePower=0;var fullSizeScaleFactor=2**fullSizeScalePower;var mouseDrag=false;var mouseDragX=0;var mouseDragY=0;var pinch=false;var pinchStartDist=0;var showMousePosition=false;var annotateClickPosition=false;var mouseNoticePosX=infNum(0n,0n);var mouseNoticePosY=infNum(0n,0n);var shiftPressed=false;var commandPressed=false;var windowLock=false;var historyParams={};var replaceStateTimeout=null;var historyTimeout=null;var resizeTimeout=null;var helpVisible=false;var controlsVisible=false;var menuVisible=false;const windowLogTiming=true;const forceWorkerReloadUrlParam="force-worker-reload=true";const forceWorkerReload=window.location.toString().includes(forceWorkerReloadUrlParam);var precision=24;var builtGradient=null;var activePlotAlgorithms=null;var workersCount=1;const maxWorkers=32;var useWorkers=true;if(!window.Worker){useWorkers=false}if(useWorkers){warnAboutWorkers();document.getElementById("workers-warning").style.display="none"}const appVersion=function(scriptElement){let src=scriptElement.getAttribute("src");let urlParams=new URLSearchParams(src.substring(src.indexOf("?")));return urlParams.has("v")?urlParams.get("v"):"unk"}(document.currentScript);function warnAboutWorkers(){document.getElementById("workers-warning").innerHTML="<b><u>Workers do not function in your browser!</u></b><br/><br/>"+"Very Plotter works much better, and can use more advanced algorithms to allow "+"deeper zooming, with web workers and subworkers.<br/><br/>"+"Subworkers currently do not function in Safari and some mobile browsers, for example.<br/><br/>"+"The recommended browsers are desktop Firefox, Chrome, or Edge, or similar."}if(!window.structuredClone){BigInt.prototype.toJSON=function(){return this.toString()};window.structuredClone=function(obj){return JSON.parse(JSON.stringify(obj))}}const startPassNumber=0;const windowCalc={timeout:null,plotName:"",algorithm:"auto",math:null,stage:"",passNumber:null,lineWidth:0,xPixelChunks:[],pixelCache:[],pointsBounds:"",passTimeMs:0,totalTimeMs:0,startTimeMs:0,endTimeMs:0,totalPoints:0,cachedPoints:0,chunksComplete:0,totalChunks:0,eachPixUnits:infNum(1n,0n),eachPixUnitsM:null,leftEdge:infNum(0n,0n),topEdge:infNum(0n,0n),rightEdge:infNum(0n,0n),bottomEdge:infNum(0n,0n),leftEdgeM:null,topEdgeM:null,rightEdgeM:null,bottomEdgeM:null,eachPixUnitsFloat:0,leftEdgeFloat:0,topEdgeFloat:0,n:1,scale:infNum(1n,0n),runtimeMs:-1,avgRuntimeMs:-1,worker:null,workersCountRange:"-",saItersSkipped:null,plotId:0,fitImage:null,pixelsImage:null,referencePx:null,referencePy:null,referenceOrbit:null,referenceBottomLeftDeltaX:null,referenceBottomLeftDeltaY:null,putImageSkip:null,putImageSkipSkips:null};var windowCalcRepeat=-1;var windowCalcTimes=[];var imageParametersCaption=false;var previewImage=null;var previewImageOffsetX=0;var previewImageOffsetY=0;const inputGotoTopLeftX=document.getElementById("go-to-tl-x");const inputGotoTopLeftY=document.getElementById("go-to-tl-y");const inputGotoBotRightX=document.getElementById("go-to-br-x");const inputGotoBotRightY=document.getElementById("go-to-br-y");const inputGotoCenterX=document.getElementById("go-to-c-x");const inputGotoCenterY=document.getElementById("go-to-c-y");const inputGotoScale=document.getElementById("go-to-scale");const inputGotoMag=document.getElementById("go-to-mag");const btnGotoBoundsGo=document.getElementById("go-to-b-go");const btnGotoBoundsReset=document.getElementById("go-to-b-reset");const btnGotoCenterGo=document.getElementById("go-to-c-go");const btnGotoCenterReset=document.getElementById("go-to-c-reset");const inputNIterations=document.getElementById("n-iter-n");const btnNIterationsGo=document.getElementById("n-iter-go");const btnNIterationsReset=document.getElementById("n-iter-reset");const inputGradGrad=document.getElementById("grad-grad");const btnGradGo=document.getElementById("grad-go");const btnGradReset=document.getElementById("grad-reset");const gradCanvas=document.getElementById("gradient-canvas");const gradCanvasRow=document.getElementById("gradient-canvas-tr");const gradCtx=gradCanvas.getContext("2d");const gradAddColorChar=document.getElementById("grad-add-color-char");const gradAddColorColor=document.getElementById("grad-add-color-color");const gradAddColorGo=document.getElementById("grad-add-color-go");const workersSelect=document.getElementById("workers-select");const detailsWorkersControls=document.getElementById("workers-controls");const gradientSelect=document.getElementById("gradient-select");const gradControlsDetails=document.getElementById("gradient-controls-details");const gradError=document.getElementById("gradient-error");const windowLockCb=document.getElementById("window-lock-cb");const inputAlgoAlgo=document.getElementById("algo-algo");const algoSelect=document.getElementById("algo-select");const btnAlgoGo=document.getElementById("algo-go");const btnAlgoReset=document.getElementById("algo-reset");const detailsAlgoControls=document.getElementById("algo-controls");const fullSizeSelect=document.getElementById("full-size-select");const btnDownload=document.getElementById("btn-download");const blogLinkMain=document.getElementById("blog-link");const blogLinkMandel=document.getElementById("blog-link-mandel");btnDownload.addEventListener("click",(function(e){document.body.style.cursor="wait";btnDownload.disabled=true;btnDownload.style.cursor="wait";setTimeout(performDownload,20)}));function performDownload(){try{if(isCurrentPlotAWindowPlot()){dContext.putImageData(windowCalc.pixelsImage,0,0)}else{drawPointsFullSize()}if(imageParametersCaption){drawImageParametersOnContext(dContext)}let link=document.createElement("a");link.download="very-plotter-"+formatCurrentDateTime()+".png";link.href=dCanvas.toDataURL();link.click()}finally{document.body.style.cursor=null;btnDownload.disabled=false;btnDownload.style.cursor=null}}function formatCurrentDateTime(){let now=new Date;now.setMinutes(now.getMinutes()-now.getTimezoneOffset());return now.toJSON().substring(0,19).replaceAll("T","-").replaceAll(":","")}const inputFields=Array.from(document.getElementsByTagName("input")).concat(Array.from(document.getElementsByTagName("textarea")));function isCurrentPlotAWindowPlot(){return plotsByName[historyParams.plot].calcFrom=="window"}function getCurrentPlotGradientMaxN(n=null,plotName=""){let plot=plotName==""?historyParams.plot:plotName;if(plotsByName[plot].gradientType=="mod"){if(n===null){n=historyParams.n}return n}else{return-1}}function calculateWindowPassChunks(){windowCalc.passNumber++;windowCalc.chunksComplete=0;const roundedParamLineWidth=Math.round(historyParams.lineWidth);const potentialTempLineWidth=Math.round(windowCalc.lineWidth/2);if(potentialTempLineWidth<=roundedParamLineWidth){windowCalc.lineWidth=roundedParamLineWidth}else{windowCalc.lineWidth=potentialTempLineWidth}const pixelSize=Math.round(windowCalc.lineWidth);const skipPrevPixels=windowCalc.passNumber>startPassNumber;const yPointsPerChunk=Math.ceil(dContext.canvas.height/pixelSize)+1;const yPointsPerChunkHalf=Math.ceil(yPointsPerChunk/2);const isBasic=windowCalc.algorithm.includes("basic");const incX=windowCalc.math.mul(windowCalc.eachPixUnitsM,windowCalc.math.createFromNumber(pixelSize));const incXTwice=windowCalc.math.mul(incX,windowCalc.math.createFromNumber(2));const zero=windowCalc.math.createFromNumber(0);let cursorX,yBottom;if(isBasic){cursorX=structuredClone(windowCalc.leftEdgeM);yBottom=structuredClone(windowCalc.bottomEdgeM)}else{cursorX=structuredClone(windowCalc.referenceBottomLeftDeltaX);yBottom=structuredClone(windowCalc.referenceBottomLeftDeltaY)}const yBottomSkip=windowCalc.math.add(yBottom,incX);let chunkNum=0;for(let x=0;x<dContext.canvas.width;x+=pixelSize){let chunk={};if(skipPrevPixels&&chunkNum%2==0){Object.assign(chunk,{chunkPix:{x:x,y:dContext.canvas.height-pixelSize},chunkPixInc:{x:0,y:-2*pixelSize},chunkPos:{x:structuredClone(cursorX),y:structuredClone(yBottomSkip)},chunkInc:{x:structuredClone(zero),y:structuredClone(incXTwice)},chunkLen:yPointsPerChunkHalf})}else{Object.assign(chunk,{chunkPix:{x:x,y:dContext.canvas.height},chunkPixInc:{x:0,y:-1*pixelSize},chunkPos:{x:structuredClone(cursorX),y:structuredClone(yBottom)},chunkInc:{x:structuredClone(zero),y:structuredClone(incX)},chunkLen:yPointsPerChunk})}windowCalc.xPixelChunks.push(chunk);cursorX=windowCalc.math.add(cursorX,incX);chunkNum++}for(let i=windowCalc.xPixelChunks.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[windowCalc.xPixelChunks[i],windowCalc.xPixelChunks[j]]=[windowCalc.xPixelChunks[j],windowCalc.xPixelChunks[i]]}windowCalc.totalChunks=windowCalc.xPixelChunks.length}function calculateReferenceOrbit(){windowCalc.referencePx=infNumAdd(windowCalc.leftEdge,infNumMul(windowCalc.eachPixUnits,infNum(BigInt(Math.floor(dCanvas.width/2)),0n)));windowCalc.referencePy=infNumAdd(windowCalc.bottomEdge,infNumMul(windowCalc.eachPixUnits,infNum(BigInt(Math.floor(dCanvas.height/2)),0n)));let refOrbitCalcContext=null;while(refOrbitCalcContext===null||!refOrbitCalcContext.done){refOrbitCalcContext=plotsByName[historyParams.plot].computeReferenceOrbit(windowCalc.n,precision,windowCalc.algorithm,windowCalc.referencePx,windowCalc.referencePy,-1,refOrbitCalcContext);drawStatusNotice(fitSizeContext,refOrbitCalcContext.status)}windowCalc.referenceOrbit=refOrbitCalcContext.orbit;console.log("calculated middle reference orbit, with ["+windowCalc.referenceOrbit.length+"] iterations, for point:");console.log("referencePx: "+infNumToString(windowCalc.referencePx));console.log("referencePy: "+infNumToString(windowCalc.referencePy));windowCalc.referenceBottomLeftDeltaX=windowCalc.math.createFromInfNum(infNumSub(windowCalc.leftEdge,windowCalc.referencePx));windowCalc.referenceBottomLeftDeltaY=windowCalc.math.createFromInfNum(infNumSub(windowCalc.bottomEdge,windowCalc.referencePy))}function computeBoundPointsChunk(chunk){var chunkStartMs=Date.now();const plot=plotsByName[historyParams.plot];const pixX=chunk.chunkPix.x;let pixY=chunk.chunkPix.y;const pixIncY=chunk.chunkPixInc.y;const results=new Array(chunk.chunkLen);if(windowCalc.algorithm.includes("basic-")){const computeFn=plot.computeBoundPointColor;const px=chunk.chunkPos.x;let py,incY;const isInfNum=windowCalc.math.name=="arbprecis";if(isInfNum){let norm=normInfNum(chunk.chunkPos.y,chunk.chunkInc.y);py=norm[0];incY=norm[1]}else{py=chunk.chunkPos.y;incY=chunk.chunkInc.y}for(let i=0;i<chunk.chunkLen;i++){const pointResult=computeFn(windowCalc.n,precision,windowCalc.algorithm,px,py);results[i]={px:getColorPoint(pixX,pixY,pointResult)};py=isInfNum?infNumAddNorm(py,incY):windowCalc.math.add(py,incY);pixY+=pixIncY}}else if(windowCalc.algorithm.includes("perturb-")){const perturbFn=plot.computeBoundPointColorPerturbOrBla;const dx=chunk.chunkPos.x;let dy=chunk.chunkPos.y;const incY=chunk.chunkInc.y;for(let i=0;i<chunk.chunkLen;i++){const pointResult=perturbFn(windowCalc.n,precision,dx,dy,windowCalc.algorithm,windowCalc.referencePx,windowCalc.referencePy,windowCalc.referenceOrbit,null,null).colorpct;results[i]={px:getColorPoint(pixX,pixY,pointResult)};dy=windowCalc.math.add(dy,incY);pixY+=pixIncY}}windowCalc.passTimeMs+=Date.now()-chunkStartMs;windowCalc.totalPoints+=results.length;windowCalc.chunksComplete++;return{points:results}}function isPassComputationComplete(){return windowCalc.xPixelChunks.length==0}function drawCalculatingNoticeOld(ctx){const canvas=ctx.canvas;ctx.fillStyle="rgba(100,100,100,1.0)";const noticeHeight=Math.max(24,canvas.height*.03);const textHeight=Math.round(noticeHeight*.6);const noticeWidth=Math.max(200,textHeight*18);ctx.fillRect(0,canvas.height-noticeHeight,noticeWidth,noticeHeight);ctx.font=textHeight+"px system-ui";ctx.fillStyle="rgba(0,0,0,0.9)";const percentComplete=Math.round(windowCalc.chunksComplete*100/windowCalc.totalChunks);let noticeText="";if(windowCalc.stage===windowCalcStages.drawCalculatingNotice&&windowCalc.algorithm.startsWith("perturb-")){noticeText="Calculating reference orbit ..."}else{noticeText="Calculating "+windowCalc.lineWidth+"-wide pixels ("+percentComplete+"%) ..."}ctx.fillText(noticeText,Math.round(noticeHeight*.2),canvas.height-Math.round(noticeHeight*.2))}function cleanUpWindowCache(){}const presets=[{plot:"Mandelbrot-set",v:4,n:2e4,lineWidth:1,mag:createInfNum("2.8e10"),centerX:createInfNum("-0.74364392705773112"),centerY:createInfNum("0.131825980877688413"),gradient:{str:"bBgwo-B.141414-mod2222-shift2"},bgColor:"b"},{plot:"Mandelbrot-set",v:4,n:400,lineWidth:1,mag:createInfNum("4.07284768207e3"),centerX:createInfNum("2.73260706888e-1"),centerY:createInfNum("-5.89495392784e-3"),gradient:{str:"roygbv-repeat3"},bgColor:"b"},{plot:"Primes-1-Step-90-turn",v:4,n:6e4,lineWidth:1,mag:infNum(1n,0n),centerX:createInfNum("-240"),centerY:createInfNum("288.4"),gradient:{str:"rbgyo"},bgColor:"b"},{plot:"Trapped-Knight",v:4,n:2016,lineWidth:1.5,mag:infNum(1n,0n),centerX:createInfNum("0"),centerY:createInfNum("0"),gradient:{str:"rbgyo"},bgColor:"b"},{plot:"Primes-1-Step-45-turn",v:4,n:32400,lineWidth:2,mag:createInfNum("1.45033112581e1"),centerX:createInfNum("35"),centerY:createInfNum("100"),gradient:{str:"rbgyo"},bgColor:"b"}];var menuHtml="<div class='plot-desc'>"+"<b>Presets:</b>";for(var i=0;i<presets.length;i++){menuHtml+="<button style='float:none; margin:0.5rem; width:2.0rem;' class='preset-view-btn' id='preset-view-btn-"+(i+1)+"'>"+(i+1)+"</button>"}menuHtml+="</div>";const plotsByName={};for(var i=0;i<plots.length;i++){plotsByName[plots[i].name]=plots[i];menuHtml+="<div class='plot-desc'>"+"<button class='plot-view-btn' id='plot-view-btn-"+i+"'>View</button>"+"<b>"+plots[i].name+"</b><br/>"+plots[i].desc+"</div>"}document.getElementById("menu-contents").innerHTML=menuHtml;const viewButtons=document.getElementsByClassName("plot-view-btn");var activatePlotHandler=function(e){var clickedId=parseInt(e.target.id.split("-")[3]);if(clickedId>=plots.length){clickedId=0}const newPlot=plots[clickedId].name;if(newPlot==historyParams.plot){return}var defaults=Object.assign(historyParams,plots[clickedId].forcedDefaults);defaults.plot=newPlot;replaceHistoryWithParams(defaults);parseUrlParams();start()};for(var i=0;i<viewButtons.length;i++){viewButtons[i].addEventListener("click",activatePlotHandler)}function activatePreset(presetParams){replaceHistoryWithParams(presetParams);parseUrlParams();start()}const presetButtons=document.getElementsByClassName("preset-view-btn");var activatePresetHandler=function(e){var clickedId=parseInt(e.target.id.split("-")[3])-1;if(clickedId<0||clickedId>=presets.length){clickedId=0}activatePreset(presets[clickedId])};for(var i=0;i<presetButtons.length;i++){presetButtons[i].addEventListener("click",activatePresetHandler)}for(let i=1;i<=maxWorkers;i++){workersSelect.innerHTML+="<option "+(i===workersCount?"selected":"")+' value="'+i+'">'+i+"</option>"}workersSelect.addEventListener("change",setWorkersCountWithSelect);function setWorkersCountWithSelect(){workersCount=parseInt(workersSelect.value);changeWorkersCount()}function changeWorkersCount(){if(windowCalc.worker!==null){windowCalc.worker.postMessage({t:"workers-count",v:workersCount})}}function stopWorkers(){windowCalc.plotId++;if(windowCalc.worker!==null){windowCalc.worker.postMessage({t:"stop",v:0})}}function changeDirectionDegrees(dir,degrees){var newDir=dir+degrees;while(newDir<0){newDir+=360}while(newDir>=360){newDir-=360}return newDir}function computeNextPointDegrees(dir,n,x,y,v={none:""}){if(dir==0){return getPoint(x+n,y,v)}else if(dir==45){return getPoint(x+n,y+n,v)}else if(dir==90){return getPoint(x,y+n,v)}else if(dir==135){return getPoint(x-n,y+n,v)}else if(dir==180){return getPoint(x-n,y,v)}else if(dir==225){return getPoint(x-n,y-n,v)}else if(dir==270){return getPoint(x,y-n,v)}return getPoint(x+n,y-n,v)}function isPrime(n){if(n<2){return false}const sqrtN=Math.sqrt(n);for(var i=2;i<=sqrtN;i++){if(n%i==0){return false}}return true}function getPoint(x,y,v={none:""}){return{x:x,y:y,v:v}}function getColor(r,g,b){return{r:r,g:g,b:b}}function getColorPoint(x,y,color){return{x:x,y:y,c:color}}function parseUrlParams(){var urlParams=new URLSearchParams(document.location.search);if(urlParams.has("repeat")){windowCalcRepeat=parseInt(urlParams.get("repeat"))}var params={plot:"Mandelbrot-set",algorithm:"auto",v:4,lineWidth:1,n:60,mag:infNum(1n,0n),centerX:createInfNum("-0.65"),centerY:infNum(0n,0n),gradient:"Bbgoyw",bgColor:"b"};if(urlParams.has("v")&&["1","2","3","4"].includes(urlParams.get("v"))){let plotName=params.plot;if(["1","2","3"].includes(urlParams.get("v"))&&urlParams.has("seq")){plotName=urlParams.get("seq")}else if(["4"].includes(urlParams.get("v"))&&urlParams.has("plot")){plotName=urlParams.get("plot")}if(plotName in plotsByName){params.plot=plotName}else{alert("no such plot ["+plotName+"]")}const plot=plotsByName[plotName];if(urlParams.has("n")){params.n=parseInt(urlParams.get("n").replaceAll(",",""));if(params.n<0){params.n=100}}if(urlParams.has("scale")){params.scale=parseScaleString(urlParams.get("scale"));params.mag=convertScaleToMagnification(params.scale,plot.magnificationFactor)}else if(urlParams.has("mag")){params.mag=parseScaleString(urlParams.get("mag"));params.scale=convertMagnificationToScale(params.mag,plot.magnificationFactor)}if(urlParams.get("v")==1){params.centerX=infNum(0n,0n);params.centerY=infNum(0n,0n)}else{if(urlParams.has("centerX")){params.centerX=createInfNum(urlParams.get("centerX").replaceAll(",",""))}if(urlParams.has("centerY")){let yParam=createInfNum(urlParams.get("centerY").replaceAll(",",""));if(urlParams.get("v")==2){yParam=infNumMul(infNum(-1n,0n),yParam)}params.centerY=yParam}}if(urlParams.has("lineColor")){params.gradient=urlParams.get("lineColor")}if(urlParams.has("gradient")){try{let grad=buildGradientObj(urlParams.get("gradient"),getCurrentPlotGradientMaxN(params.n,plotName));params.gradient=grad;builtGradient=grad;hideGradientError()}catch(e){params.gradient=parseGradientColorsOptions(urlParams.get("gradient"));displayGradientError(e)}}if(urlParams.has("bgColor")){const color=urlParams.get("bgColor");if(color in bgColorSchemes){params.bgColor=color}else{alert("no such background color scheme ["+color+"]")}}if(urlParams.has("lineWidth")){params.lineWidth=sanityCheckLineWidth(parseFloat(urlParams.get("lineWidth"))||1,false,plot)}if(urlParams.has("workers")){try{const w=parseInt(urlParams.get("workers"));if(w>0&&w<=maxWorkers){workersCount=w;workersSelect.value=workersCount}}catch(e){}}if(urlParams.has("algo")){params.algorithm=urlParams.get("algo")}}if(typeof params.gradient=="string"){params.gradient=buildGradient(params.gradient,getCurrentPlotGradientMaxN(params.n,params.plot))}console.log(params);historyParams=params}function indicateActivePlot(){const buttons=document.getElementsByClassName("plot-view-btn");for(var i=0;i<buttons.length;i++){if(plots[i].name==historyParams.plot){buttons[i].innerHTML="Active";buttons[i].parentNode.classList.add("active-plot")}else{buttons[i].innerHTML="View";buttons[i].parentNode.classList.remove("active-plot")}}}function setupGradientSelectControl(gradients){const htmlOptions=[];let foundSelected=false;for(let i=0;i<gradients.length;i++){let selected=false;if(gradients[i].colors==historyParams.gradient.colors){selected=true;foundSelected=true}else if(!foundSelected&&i===gradients.length-1){selected=true}htmlOptions.push("<option "+(selected?"selected":"")+' value="'+gradients[i].colors+'">'+gradients[i].name+"</option>")}gradientSelect.innerHTML=htmlOptions.join("");updateGradientPreview()}gradientSelect.addEventListener("change",(function(e){if(gradientSelect.value==""){return}let optionsAlreadyInBox=parseGradientColorsOptions(inputGradGrad.value).options;if(optionsAlreadyInBox.length>0){inputGradGrad.value=gradientSelect.value+"-"+optionsAlreadyInBox}else{inputGradGrad.value=gradientSelect.value}updateGradientPreview()}));function setupAlgorithmSelectControl(algorithms){const htmlOptions=[];let foundSelected=false;for(let i=0;i<algorithms.length;i++){let selected=false;if(algorithms[i].algorithm==historyParams.algorithm){selected=true;foundSelected=true}else if(!foundSelected&&i===algorithms.length-1){selected=true}htmlOptions.push("<option "+(selected?"selected":"")+' value="'+algorithms[i].algorithm+'">'+algorithms[i].name+"</option>")}algoSelect.innerHTML=htmlOptions.join("")}algoSelect.addEventListener("change",(function(e){if(algoSelect.value==""){return}inputAlgoAlgo.value=algoSelect.value}));var resetAlgorithmInput=function(){inputAlgoAlgo.value=historyParams.algorithm};btnAlgoGo.addEventListener("click",(function(){try{historyParams.algorithm=inputAlgoAlgo.value;activePlotAlgorithms[activePlotAlgorithms.length-1].algorithm=historyParams.algorithm;setupAlgorithmSelectControl(activePlotAlgorithms);redraw()}catch(e){}}));btnAlgoReset.addEventListener("click",resetAlgorithmInput);function start(){stopWorkers();if(windowCalc.timeout!=null){window.clearTimeout(windowCalc.timeout)}points.length=0;const params=historyParams;if(!plotsByName.hasOwnProperty(params.plot)){console.log("invalid plot parameter: no such plot ["+params.plot+"]");return}indicateActivePlot();if(params.plot.startsWith("Mandelbrot")){blogLinkMain.style.display="none";blogLinkMandel.style.display="";detailsWorkersControls.style.display="";if(!useWorkers){document.getElementById("workers-warning").style.display=""}}else{blogLinkMain.style.display="";blogLinkMandel.style.display="none";detailsWorkersControls.style.display="none";document.getElementById("workers-warning").style.display="none"}setDScaleVars();const plot=plotsByName[params.plot];document.title="Very Plotter - "+plot.pageTitle;if("listAlgorithms"in plot.privContext){activePlotAlgorithms=plot.privContext.listAlgorithms();setupAlgorithmSelectControl(activePlotAlgorithms);detailsAlgoControls.style.display=""}else{detailsAlgoControls.style.display="none"}if(plot.calcFrom=="sequence"){annotateClickPosition=true;if(windowCalc.worker!=null){windowCalc.worker.terminate();windowCalc.worker=null}setupGradientSelectControl(sequencePlotGradients);const out=plot.computePointsAndLength(plot.privContext);totalLength=out.length;for(var i=0;i<out.points.length;i++){points.push(out.points[i])}resetWindowCalcContext();drawPointsFitSize()}else if(plot.calcFrom=="window"){annotateClickPosition=false;setupGradientSelectControl(windowPlotGradients);resetWindowCalcCache();resetWindowCalcContext();calculateAndDrawWindow()}else{alert('Unexpected "calcFrom" field for the plot: ['+plot.calcFrom+"]")}}const bgColorSchemes={b:"rgba(0,0,0,1.0)",g:"rgba(51,51,51,1.0)",w:"rgba(255,255,255,1.0)"};const bgColorSchemeNames=[];for(let name in bgColorSchemes){bgColorSchemeNames.push(name)}function getBgColor(stringFormat=true){let color="rgba(0,0,0,1.0)";if(historyParams.bgColor in bgColorSchemes){color=bgColorSchemes[historyParams.bgColor]}if(stringFormat){return color}else{let rgba=getBgColor().substr(5).split(",");return getColor(parseInt(rgba[0]),parseInt(rgba[1]),parseInt(rgba[2]))}}function fillBg(ctx){var canvas=ctx.canvas;ctx.fillStyle=getBgColor(true);ctx.fillRect(0,0,canvas.width,canvas.height)}function setDScaleVarsNoScale(){let canvas=fitSizeCanvas;if(canvas.width!=canvas.offsetWidth||canvas.height!=canvas.offsetHeight||dCanvas.width!=canvas.width*fullSizeScaleFactor||dCanvas.height!=canvas.height*fullSizeScaleFactor){canvas.width=canvas.offsetWidth;canvas.height=canvas.offsetHeight;dCanvas.width=canvas.width*fullSizeScaleFactor;dCanvas.height=canvas.height*fullSizeScaleFactor;fillBg(fitSizeContext)}}function setDScaleVars(){setDScaleVarsNoScale();populateRenderSizeOptions();historyParams.scale=convertMagnificationToScale(historyParams.mag,plotsByName[historyParams.plot].magnificationFactor)}function populateRenderSizeOptions(){const width=fitSizeCanvas.width;const height=fitSizeCanvas.height;const html=[];let lowPower=0;let selectedPower=fullSizeScalePower;if(historyParams.plot.startsWith("Mandelbrot")){lowPower=-1;if(historyParams.lineWidth==2){selectedPower=-1}}for(let i=lowPower;i<=3;i++){let factor=2**i;let scaledWidth=Math.round(width*factor);let scaledHeight=Math.round(height*factor);let megapixels=Math.round(scaledWidth*scaledHeight*10/1e6)/10;html.push("<option "+(i===selectedPower?"selected":"")+' value="'+i+'">'+factor+"x: "+scaledWidth+"x"+scaledHeight+" ("+megapixels+"MP)"+"</option>")}fullSizeSelect.innerHTML=html.join("")}fullSizeSelect.addEventListener("change",setRenderSize);function setRenderSize(){let selectedPower=fullSizeSelect.value;if(historyParams.plot.startsWith("Mandelbrot")){if(selectedPower==-1){historyParams.lineWidth=2;selectedPower=0}else{historyParams.lineWidth=1}}fullSizeScalePower=parseInt(selectedPower);fullSizeScaleFactor=2**fullSizeScalePower;setDScaleVarsNoScale();historyParams.scale=convertMagnificationToScale(historyParams.mag,plotsByName[windowCalc.plotName].magnificationFactor);redraw()}function convertScaleToMagnification(scale,magnificationFactor){const smallDimensionPixels=infNum(BigInt(Math.min(dCanvas.width,dCanvas.height)),0n);return infNumDiv(infNumMul(scale,magnificationFactor),smallDimensionPixels,Math.min(precision,24))}function convertScaleToMagnificationIfNeeded(scale,mag,magnificationFactor){const converted=convertScaleToMagnification(scale,magnificationFactor);let needToConvert=true;if(mag!==null&&"v"in mag&&"e"in mag){let divPrecis=Math.min(precision,24);let ratio=infNumGt(converted,mag)?infNumDiv(converted,mag,divPrecis):infNumDiv(mag,converted,divPrecis);needToConvert=infNumGt(ratio,createInfNum("1.0001"))}return needToConvert?converted:mag}function convertMagnificationToScale(magnification,magnificationFactor){const smallDimensionPixels=infNum(BigInt(Math.min(dCanvas.width,dCanvas.height)),0n);return infNumDiv(infNumMul(magnification,smallDimensionPixels),magnificationFactor,Math.min(precision,24))}function replaceHistoryWithParams(params){var paramsCopy=structuredClone(params);if("algorithm"in paramsCopy&&paramsCopy.algorithm!="auto"){paramsCopy.algo=paramsCopy.algorithm}delete paramsCopy.algorithm;paramsCopy.mag=infNumExpStringTruncToLen(params.mag,precision);delete paramsCopy.scale;if(isCurrentPlotAWindowPlot()){delete paramsCopy.lineWidth}paramsCopy.gradient=paramsCopy.gradient.str;paramsCopy.centerX=infNumExpStringTruncToLen(params.centerX,precision);paramsCopy.centerY=infNumExpStringTruncToLen(params.centerY,precision);history.replaceState("",document.title,document.location.pathname+"?"+new URLSearchParams(paramsCopy).toString());replaceStateTimeout=null}var replaceHistory=function(){replaceHistoryWithParams(historyParams)};var pushToHistory=function(){var paramsCopy=structuredClone(historyParams);paramsCopy.mag=infNumExpStringTruncToLen(historyParams.mag,precision);delete paramsCopy.scale;paramsCopy.centerX=infNumExpStringTruncToLen(historyParams.centerX,precision);paramsCopy.centerY=infNumExpStringTruncToLen(historyParams.centerY,precision);history.pushState("",document.title,document.location.pathname+"?"+new URLSearchParams(paramsCopy).toString());historyTimeout=null};const windowPlotGradients=[{colors:"BbgoywBbgoyw",name:"dark blue-green"},{colors:"BpowBpowBpow",name:"purple-orange"},{colors:"BwBwBwBwBwBw",name:"black & white"},{colors:"GBPwGBPwGBPw-P.FA22BC-G.496A03",name:"olive-pink"},{colors:"TGwTGwTGwTGw-G.FAC416-T.00FFC3",name:"teal-gold"},{colors:"BroywBroywBr-B.5050FF",name:"custom"}];const sequencePlotGradients=[{colors:"rby",name:"red-blue-yellow"},{colors:"rbgyo",name:"reverse rainbow"},{colors:"roygbv",name:"rainbow"},{colors:"br",name:"blue-red"},{colors:"by",name:"blue-yellow"},{colors:"op",name:"orange-purple"},{colors:"LD-L.DCDCDC-D.1E1E1E",name:"light gray - dark gray"},{colors:"LD-L.F01414-D.640000",name:"red"},{colors:"LD-L.FA6400-D.662900",name:"orange"},{colors:"LD-L.F0F000-D.787800",name:"yellow"},{colors:"LD-L.14F014-D.006400",name:"green"},{colors:"LD-L.1414FA-D.000078",name:"blue"},{colors:"LD-L.DC00DC-D.780078",name:"purple"},{colors:"LD-L.909090-D.1E1E1E",name:"dark gray"},{colors:"LD-L.DCDCDC-D.646464",name:"light gray"},{colors:"roywB-B.5050FF",name:"custom"}];const customColorRegex=/^[a-zA-z]~([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/;const customColorHexRegex=/^[a-zA-z]\.([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/;function buildGradient(gradientString,maxN=-1){try{const grad=buildGradientObj(gradientString,maxN);builtGradient=grad;hideGradientError();return grad}catch(e){displayGradientError(e)}}function parseGradientColorsOptions(gradientString){const split=gradientString.trim().split("-");const colors=[split[0]];const options=[];let colorMatch=null;for(let i=1;i<split.length;i++){colorMatch=split[i].match(customColorRegex);if(colorMatch===null){colorMatch=split[i].match(customColorHexRegex)}if(colorMatch!==null){colors.push(split[i])}else{options.push(split[i])}}return{colors:colors.join("-"),options:options.join("-"),str:gradientString.trim()}}function buildGradientObj(gradientString,maxN=-1){if(gradientString.trim().length===0){throw"gradient must not be empty"}const colorsByName={r:[240,0,0],o:[240,120,0],y:[240,240,0],g:[0,240,0],b:[0,0,240],v:[240,0,240],p:[240,0,240],w:[255,255,255],B:[0,0,0]};const grad={str:gradientString.trim()};const args={};const splitArgs=grad.str.split("-");const colorArgs=splitArgs[0];const colorsStr=[splitArgs[0]];const optionsStr=[];let version=1;const argNames=["saturation","brightness","mod","width","offset","repeat","mirror","shift"];let colorMatch=null;let hexColor=false;for(let i=1;i<splitArgs.length;i++){colorMatch=splitArgs[i].match(customColorRegex);hexColor=false;if(colorMatch===null){colorMatch=splitArgs[i].match(customColorHexRegex);hexColor=true}if(colorMatch!==null){colorsStr.push(splitArgs[i]);let customColorName=colorMatch[0].charAt(0);let customRgbValues=[];for(let i=1;i<4;i++){let value=hexColor?parseInt(colorMatch[i],16):parseInt(colorMatch[i]);value=Math.min(255,Math.max(0,value));customRgbValues.push(value)}colorsByName[customColorName]=customRgbValues}else{optionsStr.push(splitArgs[i]);for(let j=0;j<argNames.length;j++){const argName=argNames[j];if(splitArgs[i].startsWith(argName)){args[argName]=splitArgs[i].substring(argName.length);try{if("mod"in args&&"width"in args){throw"[mod] and [width] options are incompatible"}if(argName=="mod"){if(maxN<1){throw"[mod] option is incompatible with this plot"}version=2}if(argName=="width"&&maxN>0){throw"[width] option is incompatible with this plot"}if(args[argName]==""){throw"integer expected as part of option"}let floatVal=parseFloat(args[argName]);let floatValFloor=Math.floor(floatVal);if(floatVal!=floatValFloor){throw"integer expected as part of option"}args[argName]=floatValFloor;if(["shift","saturation","brightness"].includes(argName)){if(args[argName]<-99||args[argName]>99){throw"option must be greater than -100 and less than 100"}}else if(argName=="mod"){if(args[argName]<=0){throw"option must be greater than 0"}}else if(version!=2||argName!="offset"){if(args[argName]<=0||args[argName]>100){throw"option must be greater than 0 and less than 101"}}}catch(e){throw"Invalid gradient option ["+splitArgs[i]+"]: "+e.toString()}}}}}if(!args.hasOwnProperty("mod")&&maxN>0){version=2;args.mod=maxN+1}grad.version=version;grad.mod="mod"in args?args.mod:0;grad.colors=colorsStr.join("-");grad.options=optionsStr.join("-");const colorsDefault="roygbv";let colors="";for(let i=0;i<colorArgs.length&&i<20;i++){const color=colorArgs.charAt(i);if(color in colorsByName){colors=colors+color}}if(colors.length==0){colors=colorsDefault}if("mirror"in args&&colors.length>1){let mirrorLimit=Math.min(args.mirror,4);for(let n=0;n<mirrorLimit;n++){let newColors=colors.split("");for(let i=newColors.length-2;i>=0;i--){newColors.push(newColors[i])}colors=newColors.join("")}}if("repeat"in args){colors=colors.repeat(Math.min(args.repeat,100))}if("shift"in args&&colors.length>1){let split=colors.split("");if(args.shift>0){for(let i=0;i<args.shift;i++){split.unshift(split.pop())}}else if(args.shift<0){for(let i=0;i>args.shift;i--){split.push(split.shift())}}colors=split.join("")}grad.orderedStops=[];const totalWidth="width"in args?Math.min(1,args.width/100):1;if(colors.length===1){let colorRgb=colorsByName[colors];if(colorRgb===undefined){colorRgb=colorsByName.o}grad.orderedStops.push({lower:0,upper:totalWidth,rLower:colorRgb[0],gLower:colorRgb[1],bLower:colorRgb[2],rRange:0,gRange:0,bRange:0})}else{if(version==2&&args.mod!=maxN+1&&colors.charAt(0)!=colors.charAt(colors.length-1)){colors+=colors.charAt(0)}let prevStopUpper=0;for(let i=0;i<colors.length-1;i++){let colorRgbA=colorsByName[colors.charAt(i)];if(colorRgbA===undefined){colorRgbA=colorsByName.w}let colorRgbB=colorsByName[colors.charAt(i+1)];if(colorRgbB===undefined){colorRgbB=colorsByName.w}const stop={};stop.rLower=colorRgbA[0];stop.gLower=colorRgbA[1];stop.bLower=colorRgbA[2];stop.rRange=colorRgbB[0]-stop.rLower;stop.gRange=colorRgbB[1]-stop.gLower;stop.bRange=colorRgbB[2]-stop.bLower;stop.lower=prevStopUpper;if(i==colors.length-2){stop.upper=1}else{if(version==2&&args.mod!=maxN+1){let stopWidth=1/(colors.length-2)*totalWidth;if(i==0){stopWidth/=2}stop.upper=stop.lower+stopWidth}else{stop.upper=stop.lower+1/(colors.length-1)*totalWidth}}grad.orderedStops.push(stop);prevStopUpper=stop.upper}}if(version==1){const maxOffset=1-totalWidth;const offset="offset"in args?Math.min(maxOffset,args.offset/100):0;for(let i=0;i<grad.orderedStops.length;i++){if(offset>0&&i===0){continue}grad.orderedStops[i].lower+=offset;if(i+1<grad.orderedStops.length){grad.orderedStops[i].upper+=offset}grad.orderedStops[i].range=grad.orderedStops[i].upper-grad.orderedStops[i].lower}}else if(version==2){grad.offset="offset"in args?args.offset:0;for(let i=0;i<grad.orderedStops.length;i++){grad.orderedStops[i].lower=Math.round(grad.orderedStops[i].lower*args.mod);grad.orderedStops[i].upper=Math.round(grad.orderedStops[i].upper*args.mod);grad.orderedStops[i].range=grad.orderedStops[i].upper-grad.orderedStops[i].lower}}return grad}function applyBuiltGradient(gradient,pct,stringFormat=true){const percent=Math.min(1,Math.max(0,pct));let color={r:255,g:255,b:255};let lo=0;let hi=gradient.orderedStops.length-1;let x=null;while(lo<=hi){x=lo+hi>>1;if(percent<gradient.orderedStops[x].lower){hi=x-1}else if(percent>gradient.orderedStops[x].upper){lo=x+1}else{let stop=gradient.orderedStops[x];let withinStopPct=(percent-stop.lower)/stop.range;color={r:Math.floor(withinStopPct*stop.rRange+stop.rLower),g:Math.floor(withinStopPct*stop.gRange+stop.gLower),b:Math.floor(withinStopPct*stop.bRange+stop.bLower)};break}}if(stringFormat){return"rgba("+color.r+","+color.g+","+color.b+",1.0)"}else{return color}}function applyBuiltModGradient(gradient,value,stringFormat=true){let color={r:255,g:255,b:255};const modVal=(value+gradient.offset)%gradient.mod;let lo=0;let hi=gradient.orderedStops.length-1;let x=null;while(lo<=hi){x=lo+hi>>1;if(modVal<gradient.orderedStops[x].lower){hi=x-1}else if(modVal>gradient.orderedStops[x].upper){lo=x+1}else{let stop=gradient.orderedStops[x];let withinStopPct=(modVal-stop.lower)/stop.range;color={r:Math.floor(withinStopPct*stop.rRange+stop.rLower),g:Math.floor(withinStopPct*stop.gRange+stop.gLower),b:Math.floor(withinStopPct*stop.bRange+stop.bLower)};break}}if(stringFormat){return"rgba("+color.r+","+color.g+","+color.b+",1.0)"}else{return color}}function redraw(){resetWindowCalcContext();const plot=plotsByName[historyParams.plot];if(plot.calcFrom=="sequence"){if(windowCalc.worker!=null){windowCalc.worker.terminate();windowCalc.worker=null}annotateClickPosition=true;drawPointsFitSize()}else if(plot.calcFrom=="window"){annotateClickPosition=false;calculateAndDrawWindow()}}function infNumToFloat(n){return parseFloat(infNumExpStringTruncToLen(n,18))}function drawPointsFitSize(){drawPoints(historyParams,fitSizeContext,fullSizeScaleFactor,1)}function drawPointsFullSize(){drawPoints(historyParams,dContext,1,fullSizeScaleFactor)}function drawPoints(params,ctx,scaleFactor,lineWidthFactor){if(replaceStateTimeout!=null){window.clearTimeout(replaceStateTimeout)}replaceStateTimeout=window.setTimeout(replaceHistory,250);const lineWidth=params.lineWidth*lineWidthFactor;const scale=infNumToFloat(params.scale)/scaleFactor;fillBg(ctx);console.log("drawing ["+points.length+"] points with a total length of ["+totalLength+"]");var drawnLength=0;var totalLengthScaled=totalLength*scale;var lastX=(0-windowCalc.leftEdgeFloat)*scale;var lastY=(windowCalc.topEdgeFloat-0)*scale;var segmentX=0;var segmentY=0;ctx.lineWidth=lineWidth;ctx.lineCap="round";ctx.lineJoin="round";for(var i=0;i<points.length;i++){var x=(points[i].x-windowCalc.leftEdgeFloat)*scale;var y=(windowCalc.topEdgeFloat-points[i].y)*scale;if(i>0){segmentX=x-lastX;segmentY=y-lastY;if(segmentX==0){drawnLength+=Math.abs(segmentY)}else if(segmentY==0){drawnLength+=Math.abs(segmentX)}else{drawnLength+=Math.hypot(segmentX,segmentY)}}ctx.beginPath();ctx.moveTo(lastX,lastY);ctx.strokeStyle=applyBuiltGradient(builtGradient,drawnLength/totalLengthScaled);ctx.lineTo(x,y);ctx.stroke();lastX=x;lastY=y}}function resetWindowCalcCache(){console.log("purging window points cache");if(windowCalc.worker!=null){windowCalc.worker.postMessage({t:"wipe-cache",v:null})}}function resetMandelbrotReferenceOrbit(){console.log("purging mandelbrot reference orbit");if(windowCalc.worker!=null){windowCalc.worker.postMessage({t:"wipe-ref-orbit",v:null})}}function resetWindowCalcContext(){if(windowCalc.timeout!=null){window.clearTimeout(windowCalc.timeout)}const plot=plotsByName[historyParams.plot];const params=historyParams;windowCalc.plotName=params.plot;windowCalc.stage="";let settings={precision:12,algorithm:"basic-float"};if("adjustPrecision"in plot.privContext){settings=plot.privContext.adjustPrecision(historyParams.scale,useWorkers)}if(historyParams.algorithm!="auto"){let algoPrecis;try{algoPrecis=parseInt(historyParams.algorithm.split("-").find((e=>e.startsWith("sigdig"))).substring(6))}catch(e){}if(algoPrecis!==undefined){settings.precision=algoPrecis}settings.algorithm=historyParams.algorithm}precision=settings.precision;windowCalc.algorithm=settings.algorithm;console.log("user-adjusted settings:",{precision:precision,algorithm:windowCalc.algorithm});windowCalc.math=selectMathInterfaceFromAlgorithm(windowCalc.algorithm);historyParams.scale=infNumTruncateToLen(historyParams.scale,precision);historyParams.mag=convertScaleToMagnificationIfNeeded(historyParams.scale,historyParams.mag,plot.magnificationFactor);historyParams.centerX=infNumTruncateToLen(historyParams.centerX,precision);historyParams.centerY=infNumTruncateToLen(historyParams.centerY,precision);if(previewImage===null){previewImage=fullSizeScalePower==0?windowCalc.pixelsImage:windowCalc.fitImage}windowCalc.lineWidth=128;windowCalc.fitImage=fitSizeContext.getImageData(0,0,fitSizeCanvas.width,fitSizeCanvas.height);windowCalc.pixelsImage=dContext.getImageData(0,0,dCanvas.width,dCanvas.height);windowCalc.xPixelChunks=[];windowCalc.pointsBounds="";windowCalc.passTimeMs=0;windowCalc.totalTimeMs=0;windowCalc.startTimeMs=Date.now();windowCalc.endTimeMs=0;windowCalc.totalPoints=0;windowCalc.cachedPoints=0;windowCalc.totalChunks=0;windowCalc.runtimeMs=-1;windowCalc.avgRuntimeMs=-1;windowCalc.workersCountRange="-";windowCalc.saItersSkipped=null;windowCalc.plotId++;windowCalc.putImageSkip=0;if(useWorkers){if(windowCalc.algorithm=="basic-float"){windowCalc.putImageSkipSkips=5}else{windowCalc.putImageSkipSkips=-1}}else{if(windowCalc.algorithm.includes("perturb")){windowCalc.putImageSkipSkips=1}else{windowCalc.putImageSkipSkips=5}}const two=infNum(2n,0n);const canvasWidth=createInfNum(dCanvas.width.toString());const canvasHeight=createInfNum(dCanvas.height.toString());windowCalc.eachPixUnits=infNumDiv(infNum(1n,0n),params.scale,precision);windowCalc.eachPixUnitsM=windowCalc.math.createFromInfNum(windowCalc.eachPixUnits);const scaledWidth=infNumDiv(canvasWidth,params.scale,precision);const leftEdge=infNumSub(params.centerX,infNumDiv(infNumDiv(canvasWidth,two,precision),params.scale,precision));const rightEdge=infNumAdd(leftEdge,scaledWidth);const scaledHeight=infNumDiv(canvasHeight,params.scale,precision);const topEdge=infNumAdd(params.centerY,infNumDiv(infNumDiv(canvasHeight,two,precision),params.scale,precision));const bottomEdge=infNumSub(topEdge,scaledHeight);if(windowCalc.n!=params.n||!infNumEq(windowCalc.scale,params.scale)){resetWindowCalcCache()}windowCalc.n=params.n;windowCalc.scale=params.scale;windowCalc.leftEdge=leftEdge;windowCalc.topEdge=topEdge;windowCalc.rightEdge=rightEdge;windowCalc.bottomEdge=bottomEdge;windowCalc.eachPixUnitsFloat=infNumToFloat(windowCalc.eachPixUnits);windowCalc.leftEdgeFloat=infNumToFloat(leftEdge);windowCalc.topEdgeFloat=infNumToFloat(topEdge);windowCalc.leftEdgeM=windowCalc.math.createFromInfNum(leftEdge);windowCalc.topEdgeM=windowCalc.math.createFromInfNum(topEdge);windowCalc.rightEdgeM=windowCalc.math.createFromInfNum(rightEdge);windowCalc.bottomEdgeM=windowCalc.math.createFromInfNum(bottomEdge);resetGoToBoundsValues();resetGoToCenterValues();resetNIterationsValue();resetGradientInput();resetAlgorithmInput()}function resetGoToBoundsValues(){var imaginaryCoordinates=false;if("usesImaginaryCoordinates"in plotsByName[historyParams.plot].privContext){imaginaryCoordinates=plotsByName[historyParams.plot].privContext.usesImaginaryCoordinates}if(historyParams.plot.startsWith("Mandelbrot")){inputGotoTopLeftX.value=infNumToString(windowCalc.leftEdge);inputGotoTopLeftY.value=infNumToString(windowCalc.topEdge)+(imaginaryCoordinates?"i":"");inputGotoBotRightX.value=infNumToString(windowCalc.rightEdge);inputGotoBotRightY.value=infNumToString(windowCalc.bottomEdge)+(imaginaryCoordinates?"i":"")}else{inputGotoTopLeftX.value=infNumExpString(windowCalc.leftEdge);inputGotoTopLeftY.value=infNumExpString(windowCalc.topEdge)+(imaginaryCoordinates?"i":"");inputGotoBotRightX.value=infNumExpString(windowCalc.rightEdge);inputGotoBotRightY.value=infNumExpString(windowCalc.bottomEdge)+(imaginaryCoordinates?"i":"")}}function resetGoToCenterValues(){var imaginaryCoordinates=false;if("usesImaginaryCoordinates"in plotsByName[historyParams.plot].privContext){imaginaryCoordinates=plotsByName[historyParams.plot].privContext.usesImaginaryCoordinates}if(historyParams.plot.startsWith("Mandelbrot")){inputGotoCenterX.value=infNumToString(historyParams.centerX);inputGotoCenterY.value=infNumToString(historyParams.centerY)+(imaginaryCoordinates?"i":"")}else{inputGotoCenterX.value=infNumExpString(historyParams.centerX);inputGotoCenterY.value=infNumExpString(historyParams.centerY)+(imaginaryCoordinates?"i":"")}inputGotoScale.value=infNumExpString(historyParams.scale);inputGotoMag.value=infNumExpString(historyParams.mag)}function resetNIterationsValue(){if(windowCalc.plotName==="Mandelbrot-set"){document.getElementById("n-iter-label1").innerHTML="iterations";document.getElementById("n-iter-label2").innerHTML="iterations:"}else{document.getElementById("n-iter-label1").innerHTML="N";document.getElementById("n-iter-label2").innerHTML="N:"}inputNIterations.value=historyParams.n.toLocaleString()}function applyGoToBoundsValues(){let leftX,rightX,topY,bottomY;try{leftX=createInfNum(inputGotoTopLeftX.value.replaceAll(",",""))}catch(e){alert("Invalid top left x value");return}try{rightX=createInfNum(inputGotoBotRightX.value.replaceAll(",",""))}catch(e){alert("Invalid bottom right x value");return}if(infNumGe(leftX,rightX)){alert("Top left x value must be less than bottom right x value");return}try{topY=createInfNum(replaceAllEachChar(inputGotoTopLeftY.value,",iI ",""))}catch(e){alert("Invalid top left x value");return}try{bottomY=createInfNum(replaceAllEachChar(inputGotoBotRightY.value,",iI ",""))}catch(e){alert("Invalid bottom right x value");return}if(infNumGe(bottomY,topY)){alert("Bottom left y value must be less than top left y value");return}const diffX=infNumSub(rightX,leftX);const diffY=infNumSub(topY,bottomY);const newCenterX=infNumAdd(leftX,infNumDiv(diffX,infNum(2n,0n),precision));const newCenterY=infNumAdd(bottomY,infNumDiv(diffY,infNum(2n,0n),precision));const scaleX=infNumDiv(createInfNum(dCanvas.width.toString()),diffX,precision);const scaleY=infNumDiv(createInfNum(dCanvas.height.toString()),diffY,precision);console.log("X spans ["+infNumToString(diffX)+"] units, thus ["+infNumToString(scaleX)+"] pixels/unit");console.log("Y spans ["+infNumToString(diffY)+"] units, thus ["+infNumToString(scaleY)+"] pixels/unit");var smaller=scaleX;if(infNumLt(scaleY,scaleX)){smaller=scaleY}console.log("going with scale of ["+infNumToString(smaller)+"]");historyParams.centerX=newCenterX;historyParams.centerY=newCenterY;historyParams.scale=smaller;redraw()}function applyGoToCenterValues(){try{historyParams.centerX=createInfNum(inputGotoCenterX.value.replaceAll(",",""))}catch(e){alert("Invalid center x value");return}try{historyParams.centerY=createInfNum(replaceAllEachChar(inputGotoCenterY.value,",iI ",""))}catch(e){alert("Invalid center y value");return}try{historyParams.scale=createInfNum(inputGotoScale.value.replaceAll(",",""))}catch(e){alert("Invalid scale value");return}redraw()}function parseScaleString(str){let cleaned=replaceAllEachChar(str,", +","");if(cleaned.length===0){throw"Value cannot be empty"}let powerSplit=cleaned.split("^");if(powerSplit.length>1){return infNum(BigInt(powerSplit[0].split(".")[0])**BigInt(powerSplit[1].replaceAll("-","").split(".")[0]),0n)}else{return createInfNum(powerSplit[0])}}function setMagInputToMatchScale(){if(inputGotoScale.value=="Invalid magnification value"){return}try{if(inputGotoScale.value.length===0){return}let scale=parseScaleString(inputGotoScale.value);let mag=convertScaleToMagnification(scale,plotsByName[windowCalc.plotName].magnificationFactor);inputGotoMag.value=infNumExpString(mag)}catch(e){inputGotoMag.value="Invalid scale value"}}function setScaleInputToMatchMag(){if(inputGotoScale.value=="Invalid scale value"){return}try{if(inputGotoMag.value.length===0){return}let mag=parseScaleString(inputGotoMag.value);let scale=convertMagnificationToScale(mag,plotsByName[windowCalc.plotName].magnificationFactor);inputGotoScale.value=infNumExpString(scale)}catch(e){inputGotoScale.value="Invalid magnification value"}}inputGotoScale.addEventListener("change",setMagInputToMatchScale);inputGotoScale.addEventListener("input",setMagInputToMatchScale);inputGotoScale.addEventListener("propertychange",setMagInputToMatchScale);inputGotoScale.addEventListener("paste",setMagInputToMatchScale);inputGotoMag.addEventListener("change",setScaleInputToMatchMag);inputGotoMag.addEventListener("input",setScaleInputToMatchMag);inputGotoMag.addEventListener("propertychange",setScaleInputToMatchMag);inputGotoMag.addEventListener("paste",setScaleInputToMatchMag);function applyNIterationsValue(){const newN=parseInt(inputNIterations.value.replaceAll(",",""));if(newN>0){historyParams.n=newN;resetNIterationsValue();try{if(builtGradient.mod==0){start()}else{let grad=buildGradientObj(builtGradient.str,getCurrentPlotGradientMaxN());historyParams.gradient=grad;builtGradient=grad;start()}}catch(e){displayGradientError(e)}}}function textInputHasFocus(){var anyHasFocus=false;for(let i=0;i<inputFields.length;i++){if(inputFields[i]===document.activeElement){anyHasFocus=true;break}}return anyHasFocus}btnGotoBoundsGo.addEventListener("click",applyGoToBoundsValues);btnGotoBoundsReset.addEventListener("click",resetGoToBoundsValues);btnGotoCenterGo.addEventListener("click",applyGoToCenterValues);btnGotoCenterReset.addEventListener("click",resetGoToCenterValues);btnNIterationsGo.addEventListener("click",applyNIterationsValue);btnNIterationsReset.addEventListener("click",resetNIterationsValue);var calcWorkerOnmessage=function(e){if(!useWorkers){return}if("subworkerNoWorky"in e.data){useWorkers=false;warnAboutWorkers();redraw();return}if(e.data.plotId!==windowCalc.plotId){return}if("statusMessage"in e.data){const messageString=e.data.statusMessage;drawStatusNotice(fitSizeContext,messageString);if(showMousePosition){redrawMousePosNotice()}if(imageParametersCaption){drawImageParameters()}return}drawWorkerColorPoints(e);if(showMousePosition){redrawMousePosNotice()}windowCalc.workersCountRange=e.data.calcStatus.workersCount;if("saItersSkipped"in e.data.calcStatus){windowCalc.saItersSkipped=e.data.calcStatus.saItersSkipped}const percentComplete=Math.round(e.data.calcStatus.chunksComplete*100/e.data.calcStatus.chunks);if(percentComplete<100){drawCalculatingNotice(fitSizeContext,e.data.calcStatus.pixelWidth,percentComplete,e.data.calcStatus.workersNow)}else{repaintOnly();if(windowLogTiming){const totalPts=e.data.calcStatus.passPoints;const cachedPts=e.data.calcStatus.passCachedPoints;const cachedPct=Math.round(cachedPts*1e4/totalPts)/100;console.log("computing ["+totalPts+"] points of width ["+e.data.calcStatus.pixelWidth+"], of which ["+cachedPts+"] were cached ("+cachedPct+"%)")}if(e.data.calcStatus.running){drawStartingPassNotice()}else{if(windowLogTiming){windowLogOverallImage();if(windowCalcRepeat>1){windowCalcRepeat-=1;resetWindowCalcCache();resetMandelbrotReferenceOrbit();redraw()}else if(windowCalcRepeat===1){windowCalcRepeat-=1;windowAverageTiming()}}if(imageParametersCaption){drawImageParameters()}}}};function drawWorkerColorPoints(workerMessage){const e=workerMessage.data;const pixIncY=e.chunkPixInc.y;const pixelSize=e.calcStatus.pixelWidth;const pixX=e.chunkPix.x;let pixY=e.chunkPix.y;const results=new Array(e.chunkLen);for(let i=0;i<e.chunkLen;i++){const point=getColorPoint(pixX,pixY,e.results[i]);results[i]={px:point};pixY+=pixIncY}drawColorPoints(results,pixelSize);previewImage=fullSizeScalePower==0?windowCalc.pixelsImage:windowCalc.fitImage;previewImageOffsetX=0;previewImageOffsetY=0}function calculateAndDrawWindowSync(pixelSize){const compute=plotsByName[windowCalc.plotName].computeBoundPointColor;let step=windowCalc.eachPixUnitsFloat*fullSizeScaleFactor*pixelSize;let px=windowCalc.leftEdgeFloat;let xStep=step;const results=new Array(Math.ceil(fitSizeCanvas.width/pixelSize)*Math.ceil(fitSizeCanvas.height/pixelSize));let resultCounter=0;for(let x=0;x<fitSizeCanvas.width;x+=pixelSize){let py=windowCalc.topEdgeFloat;for(let y=0;y<fitSizeCanvas.height;y+=pixelSize){results[resultCounter]={px:getColorPoint(x,y,compute(windowCalc.n,precision,windowCalc.algorithm,px,py))};resultCounter++;py-=step}px+=xStep}drawColorPointsFitOnlyNoCache(results,pixelSize)}function calculateAndDrawWindow(){if(windowCalc.algorithm=="basic-float"){calculateAndDrawWindowSync(100);previewImage=null;previewImageOffsetX=0;previewImageOffsetY=0}else{drawPreviewImage()}if(windowCalc.timeout!=null){window.clearTimeout(windowCalc.timeout)}if(useWorkers){windowCalc.timeout=window.setTimeout(kickoffWindowWorker,250)}else{windowCalc.timeout=window.setTimeout(kickoffWindowDrawLoop,250)}}function resetPixelCache(){windowCalc.pixelCache=new Array(dCanvas.width);for(let i=0;i<windowCalc.pixelCache.length;i++){windowCalc.pixelCache[i]=new Array(dCanvas.height)}}function kickoffWindowDrawLoop(){if(windowCalc.timeout!=null){window.clearTimeout(windowCalc.timeout)}resetPixelCache();let startLineWidth=windowCalc.algorithm=="basic-float"?Math.round(historyParams.lineWidth)*64:Math.round(historyParams.lineWidth)*256;while(startLineWidth>300){startLineWidth/=2}windowCalc.lineWidth=startLineWidth;windowCalc.passNumber=startPassNumber-1;windowCalc.stage=windowCalcStages.drawCalculatingNotice;windowCalc.timeout=window.setInterval(windowDrawLoop,5)}function kickoffWindowWorker(){if(windowCalc.worker===null){if(forceWorkerReload){windowCalc.worker=new Worker("calcworker.js?v="+appVersion+"&"+forceWorkerReloadUrlParam+"&t="+Date.now())}else{windowCalc.worker=new Worker("calcworker.js?v="+appVersion)}windowCalc.worker.onmessage=calcWorkerOnmessage}else{windowCalc.worker.postMessage({t:"stop",v:0})}resetPixelCache();let startLineWidth=windowCalc.algorithm=="basic-float"?Math.round(historyParams.lineWidth)*32:Math.round(historyParams.lineWidth)*128;while(startLineWidth>300){startLineWidth/=2}const workerCalc={};workerCalc.plot=windowCalc.plotName;workerCalc.eachPixUnits=windowCalc.eachPixUnits;workerCalc.eachPixUnitsM=windowCalc.eachPixUnitsM;workerCalc.leftEdge=windowCalc.leftEdge;workerCalc.rightEdge=windowCalc.rightEdge;workerCalc.topEdge=windowCalc.topEdge;workerCalc.bottomEdge=windowCalc.bottomEdge;workerCalc.leftEdgeM=windowCalc.leftEdgeM;workerCalc.rightEdgeM=windowCalc.rightEdgeM;workerCalc.topEdgeM=windowCalc.topEdgeM;workerCalc.bottomEdgeM=windowCalc.bottomEdgeM;workerCalc.n=windowCalc.n;workerCalc.precision=precision;workerCalc.algorithm=windowCalc.algorithm;workerCalc.startWidth=startLineWidth;workerCalc.finalWidth=Math.round(historyParams.lineWidth);workerCalc.canvasWidth=dContext.canvas.width;workerCalc.canvasHeight=dContext.canvas.height;workerCalc.workers=workersCount;workerCalc.plotId=windowCalc.plotId;windowCalc.worker.postMessage({t:"worker-calc",v:workerCalc})}var resetGradientInput=function(){inputGradGrad.value=historyParams.gradient.str;updateGradientPreview()};btnGradGo.addEventListener("click",(function(){try{let grad=buildGradientObj(inputGradGrad.value,getCurrentPlotGradientMaxN());historyParams.gradient=grad;builtGradient=grad;hideGradientError();if(isCurrentPlotAWindowPlot()){windowPlotGradients[windowPlotGradients.length-1].colors=historyParams.gradient.colors;setupGradientSelectControl(windowPlotGradients);recolor()}else{sequencePlotGradients[sequencePlotGradients.length-1].colors=historyParams.gradient.colors;setupGradientSelectControl(sequencePlotGradients);redraw()}}catch(e){displayGradientError(e)}}));btnGradReset.addEventListener("click",resetGradientInput);inputGradGrad.addEventListener("change",updateGradientPreview);inputGradGrad.addEventListener("input",updateGradientPreview);inputGradGrad.addEventListener("propertychange",updateGradientPreview);inputGradGrad.addEventListener("paste",updateGradientPreview);function updateGradientPreview(){try{const gradient=buildGradientObj(inputGradGrad.value,getCurrentPlotGradientMaxN());hideGradientError();gradCanvas.width=gradCanvas.offsetWidth;gradCanvas.height=gradCanvas.offsetHeight;const w=gradCanvas.width;const h=gradCanvas.height;if(w===0||h===0){return}if(gradient.mod==0){for(let i=0;i<=w;i++){gradCtx.fillStyle=applyBuiltGradient(gradient,i/w);gradCtx.fillRect(i-1,0,1,h)}}else{for(let i=0;i<=w;i++){gradCtx.fillStyle=applyBuiltModGradient(gradient,Math.round(i/w*(gradient.mod-1)));gradCtx.fillRect(i-1,0,1,h)}}}catch(e){displayGradientError(e)}}gradControlsDetails.addEventListener("toggle",(function(){if(gradControlsDetails.open){updateGradientPreview()}}));function displayGradientError(e){gradError.style.display="";gradError.innerHTML=e.toString();gradCanvasRow.style.display="none"}function hideGradientError(){gradError.innerHTML="";gradError.style.display="none";gradCanvasRow.style.display=""}const customColorCharRegex=/^[A-za-z]$/;function enforceGradCustomColorChar(){if(gradAddColorChar.value==""){return}if(gradAddColorChar.value.length>1){gradAddColorChar.value=gradAddColorChar.value.slice(-1)}if(gradAddColorChar.value.match(customColorCharRegex)===null){gradAddColorChar.value=""}}gradAddColorChar.addEventListener("change",enforceGradCustomColorChar);gradAddColorChar.addEventListener("input",enforceGradCustomColorChar);gradAddColorChar.addEventListener("propertychange",enforceGradCustomColorChar);gradAddColorChar.addEventListener("paste",enforceGradCustomColorChar);gradAddColorGo.addEventListener("click",(function(){if(gradAddColorChar.value==""){return}let gradAlreadyInBox=parseGradientColorsOptions(inputGradGrad.value);inputGradGrad.value=gradAlreadyInBox.colors+"-"+gradAddColorChar.value.slice(-1)+"."+gradAddColorColor.value.substring(1);if(gradAlreadyInBox.options.length>0){inputGradGrad.value+="-"+gradAlreadyInBox.options}updateGradientPreview()}));windowLockCb.addEventListener("change",(function(){windowLock=windowLockCb.checked;if(!windowLock){resizeCanvas()}}));windowLockCb.checked=windowLock;const windowCalcStages={drawCalculatingNotice:"draw-calculating-notice",calculateReferenceOrbit:"calculate-reference-orbit",calculateChunks:"calculate-chunks",doNextChunk:"next-chunk",cleanUpWindowCache:"clean-up-window-cache",stop:"stop"};function windowDrawLoop(){if(windowCalc.stage===windowCalcStages.drawCalculatingNotice){drawCalculatingNoticeOld(fitSizeContext);windowCalc.stage=windowCalcStages.calculateReferenceOrbit}else if(windowCalc.stage===windowCalcStages.calculateReferenceOrbit){windowCalc.referenceBottomLeftDeltaX=null;windowCalc.referenceBottomLeftDeltaY=null;if(windowCalc.algorithm.startsWith("perturb-")){calculateReferenceOrbit()}else{windowCalc.referencePx=null;windowCalc.referencePy=null;windowCalc.referenceOrbit=null}windowCalc.stage=windowCalcStages.calculateChunks}else if(windowCalc.stage===windowCalcStages.calculateChunks){calculateWindowPassChunks();windowCalc.stage=windowCalcStages.doNextChunk}else if(windowCalc.stage===windowCalcStages.doNextChunk){const isPassFinished=calculateAndDrawNextChunk();if(isPassFinished){if(windowLogTiming){windowCalc.totalTimeMs+=windowCalc.passTimeMs;let cachedPct=Math.round(windowCalc.cachedPoints*1e4/windowCalc.totalPoints)/100;console.log("computing ["+windowCalc.totalPoints+"] points of width ["+windowCalc.lineWidth+"], of which ["+windowCalc.cachedPoints+"] were cached ("+cachedPct+"%), took ["+windowCalc.passTimeMs+"] ms")}if(windowCalc.lineWidth>Math.round(historyParams.lineWidth)){windowCalc.stage=windowCalcStages.calculateChunks}else{repaintOnly();if(windowLogTiming){windowLogOverallImage();if(windowCalcRepeat>1){windowCalcRepeat-=1;resetWindowCalcCache();redraw()}else if(windowCalcRepeat===1){windowCalcRepeat-=1;windowAverageTiming()}}if(imageParametersCaption){drawImageParameters()}windowCalc.stage=windowCalcStages.cleanUpWindowCache}}}else if(windowCalc.stage===windowCalcStages.cleanUpWindowCache){cleanUpWindowCache();if(windowCalc.timeout!=null){window.clearTimeout(windowCalc.timeout)}}else{if(windowCalc.timeout!=null){window.clearTimeout(windowCalc.timeout)}}}function calculateAndDrawNextChunk(){let isPassFinished=false;for(let i=0;i<8&&!isPassFinished;i++){var nextXChunk=windowCalc.xPixelChunks.shift();isPassFinished=isPassComputationComplete();if(nextXChunk){drawColorPoints(computeBoundPointsChunk(nextXChunk).points,Math.round(windowCalc.lineWidth));previewImage=fullSizeScalePower==0?windowCalc.pixelsImage:windowCalc.fitImage;previewImageOffsetX=0;previewImageOffsetY=0}}if(!isPassFinished){drawCalculatingNoticeOld(fitSizeContext)}return isPassFinished}function windowLogOverallImage(){windowCalc.endTimeMs=Date.now();const overallTimeMs=windowCalc.endTimeMs-windowCalc.startTimeMs;windowCalc.runtimeMs=overallTimeMs;console.log("COMPLETED image ["+"w:"+dCanvas.width+", "+"h:"+dCanvas.height+", "+"lineWidth:"+Math.round(historyParams.lineWidth)+", "+"n:"+historyParams.n+", "+"centerX:"+infNumToString(infNumTruncateToLen(historyParams.centerX,precision))+", "+"centerY:"+infNumToString(infNumTruncateToLen(historyParams.centerY,precision))+", "+"scale:"+infNumToString(infNumTruncateToLen(historyParams.scale,precision))+"] took: "+"["+overallTimeMs+"] ms of overall time, "+"["+windowCalc.totalTimeMs+"] ms of compute/draw time, "+"["+(overallTimeMs-windowCalc.totalTimeMs)+"] ms of idle/wait time");windowCalcTimes.push(overallTimeMs)}function windowAverageTiming(){let maxTime=0;let minTime=0;if(windowCalcTimes.length>4){for(let i=0;i<windowCalcTimes.length;i++){if(windowCalcTimes[i]>maxTime){maxTime=windowCalcTimes[i]}if(minTime==0||windowCalcTimes[i]<minTime){minTime=windowCalcTimes[i]}}}let sum=0;let num=0;for(let i=0;i<windowCalcTimes.length;i++){if(windowCalcTimes[i]==maxTime||windowCalcTimes[i]==minTime){continue}sum+=windowCalcTimes[i];num++}if(num>0){windowCalc.avgRuntimeMs=sum/num;console.log("excluding max ["+maxTime+"] and min ["+minTime+"], the average overall time of ["+num+"] images was ["+windowCalc.avgRuntimeMs+"] ms")}}function drawColorPointsFitOnlyNoCache(windowPoints,pixelSize){if(replaceStateTimeout!=null){window.clearTimeout(replaceStateTimeout)}replaceStateTimeout=window.setTimeout(replaceHistory,250);const width=fitSizeCanvas.width;const height=fitSizeCanvas.height;const imageData=fullSizeScalePower==0?windowCalc.pixelsImage:windowCalc.fitImage;const context=fitSizeContext;const fitImage=windowCalc.fitImage;const bgColor=getBgColor(false);let pointColor=null;for(let i=0;i<windowPoints.length;i++){const resX=windowPoints[i].px.x;const resY=windowPoints[i].px.y;const colorPct=windowPoints[i].px.c;if(colorPct==windowCalcIgnorePointColor){continue}else if(colorPct==windowCalcBackgroundColor){pointColor=bgColor}else if(builtGradient.mod==0){pointColor=applyBuiltGradient(builtGradient,colorPct,false)}else{pointColor=applyBuiltModGradient(builtGradient,colorPct,false)}let pixelOffsetInImage=0;let pixX,pixY;for(let x=0;x<pixelSize;x++){pixX=resX+x;if(pixX>=width){break}for(let y=0;y<pixelSize;y++){pixY=resY+y;if(pixY>=height){break}pixelOffsetInImage=(pixY*width+pixX)*4;imageData.data[pixelOffsetInImage+0]=pointColor.r;imageData.data[pixelOffsetInImage+1]=pointColor.g;imageData.data[pixelOffsetInImage+2]=pointColor.b;imageData.data[pixelOffsetInImage+3]=255}}}context.putImageData(imageData,0,0)}function drawColorPoints(windowPoints,pixelSize){if(replaceStateTimeout!=null){window.clearTimeout(replaceStateTimeout)}replaceStateTimeout=window.setTimeout(replaceHistory,250);const canvas=dContext.canvas;const width=canvas.width;const height=canvas.height;const pixelsImage=windowCalc.pixelsImage;const fitWidth=fitSizeCanvas.width;const fitImage=windowCalc.fitImage;const bgColor=getBgColor(false);let pointColor=null;let pixX,pixY,fitPixX,fitPixY;let pixelOffsetInImage=0;let fitPixOffset=0;for(let i=0;i<windowPoints.length;i++){const resX=windowPoints[i].px.x;const resY=windowPoints[i].px.y;let lastFitPixX=31<<26;let lastFitPixY=31<<26;const colorPct=windowPoints[i].px.c;if(colorPct==windowCalcIgnorePointColor){continue}else if(colorPct==windowCalcBackgroundColor){pointColor=bgColor}else if(builtGradient.mod==0){pointColor=applyBuiltGradient(builtGradient,colorPct,false)}else{pointColor=applyBuiltModGradient(builtGradient,colorPct,false)}for(let x=0;x<pixelSize;x++){pixX=resX+x;if(pixX>=width){break}fitPixX=pixX>>fullSizeScalePower;for(let y=0;y<pixelSize;y++){pixY=resY+y;if(pixY>=height){break}pixelOffsetInImage=(pixY*width+pixX)*4;pixelsImage.data[pixelOffsetInImage+0]=pointColor.r;pixelsImage.data[pixelOffsetInImage+1]=pointColor.g;pixelsImage.data[pixelOffsetInImage+2]=pointColor.b;pixelsImage.data[pixelOffsetInImage+3]=255;windowCalc.pixelCache[pixX][pixY]=colorPct;if(fullSizeScalePower==0){continue}fitPixY=pixY>>fullSizeScalePower;if(fitPixY==lastFitPixY&&fitPixX==lastFitPixX){continue}lastFitPixX=fitPixX;lastFitPixY=fitPixY;fitPixOffset=(fitPixY*fitWidth+fitPixX)*4;fitImage.data[fitPixOffset+0]=pointColor.r;fitImage.data[fitPixOffset+1]=pointColor.g;fitImage.data[fitPixOffset+2]=pointColor.b;fitImage.data[fitPixOffset+3]=255}}}if(windowCalc.putImageSkip++<windowCalc.putImageSkipSkips){return}windowCalc.putImageSkip=0;if(fullSizeScalePower==0){fitSizeContext.putImageData(pixelsImage,0,0)}else{fitSizeContext.putImageData(fitImage,0,0)}}function recolor(){if(replaceStateTimeout!=null){window.clearTimeout(replaceStateTimeout)}replaceStateTimeout=window.setTimeout(replaceHistory,250);resetGradientInput();const fitWidth=fitSizeCanvas.width;const width=dCanvas.width;const height=dCanvas.height;const bgColor=getBgColor(false);let colorPct=-2;let color=null;let pixelOffsetInImage=null;let fitOffset,fitX,fitY;let lastFitY=31<<26;let lastFitX=31<<26;for(let x=0;x<width;x++){fitX=x>>fullSizeScalePower;for(let y=0;y<height;y++){colorPct=windowCalc.pixelCache[x][y];if(colorPct===undefined||colorPct==windowCalcIgnorePointColor){continue}if(colorPct==windowCalcBackgroundColor){color=bgColor}else if(builtGradient.mod==0){color=applyBuiltGradient(builtGradient,colorPct,false)}else{color=applyBuiltModGradient(builtGradient,colorPct,false)}pixelOffsetInImage=(y*width+x)*4;windowCalc.pixelsImage.data[pixelOffsetInImage+0]=color.r;windowCalc.pixelsImage.data[pixelOffsetInImage+1]=color.g;windowCalc.pixelsImage.data[pixelOffsetInImage+2]=color.b;windowCalc.pixelsImage.data[pixelOffsetInImage+3]=255;if(fullSizeScalePower==0){continue}fitY=y>>fullSizeScalePower;if(fitY==lastFitY&&fitX==lastFitX){continue}lastFitX=fitX;lastFitY=fitY;fitOffset=(fitY*fitWidth+fitX)*4;windowCalc.fitImage.data[fitOffset+0]=color.r;windowCalc.fitImage.data[fitOffset+1]=color.g;windowCalc.fitImage.data[fitOffset+2]=color.b;windowCalc.fitImage.data[fitOffset+3]=255}}if(fullSizeScalePower==0){fitSizeContext.putImageData(windowCalc.pixelsImage,0,0)}else{fitSizeContext.putImageData(windowCalc.fitImage,0,0)}}function repaintOnly(){if(plotsByName[historyParams.plot].calcFrom=="sequence"){drawPointsFitSize()}else{if(fullSizeScalePower==0){fitSizeContext.putImageData(windowCalc.pixelsImage,0,0)}else{fitSizeContext.putImageData(windowCalc.fitImage,0,0)}}}function drawPreviewImage(){fillBg(fitSizeContext);if(previewImage!==null){fitSizeContext.putImageData(previewImage,previewImageOffsetX,previewImageOffsetY)}}function drawCalculatingNotice(ctx,pixelSize,percentComplete,workersNow){const canvas=ctx.canvas;ctx.fillStyle="rgba(100,100,100,1.0)";const noticeHeight=Math.max(24,canvas.height*.03);const textHeight=Math.round(noticeHeight*.6);const noticeWidth=Math.max(200,textHeight*24);ctx.fillRect(0,canvas.height-noticeHeight,noticeWidth,noticeHeight);ctx.font=textHeight+"px system-ui";ctx.fillStyle="rgba(0,0,0,0.9)";const workersText=workersNow+" worker"+(workersNow>1?"s":"");ctx.fillText("Calculating "+pixelSize+"-wide pixels ("+percentComplete+"%) with "+workersText+" ...",Math.round(noticeHeight*.2),canvas.height-Math.round(noticeHeight*.2))}function drawStatusNotice(ctx,message){const canvas=ctx.canvas;ctx.fillStyle="rgba(100,100,100,1.0)";const noticeHeight=Math.max(24,canvas.height*.03);const textHeight=Math.round(noticeHeight*.6);const noticeWidth=Math.max(200,textHeight*24);ctx.fillRect(0,canvas.height-noticeHeight,noticeWidth,noticeHeight);ctx.font=textHeight+"px system-ui";ctx.fillStyle="rgba(0,0,0,0.9)";ctx.fillText(message+" ...",Math.round(noticeHeight*.2),canvas.height-Math.round(noticeHeight*.2))}function drawStartingPassNotice(){const ctx=fitSizeContext;const canvas=fitSizeCanvas;ctx.fillStyle="rgba(100,100,100,1.0)";const noticeHeight=Math.max(24,canvas.height*.03);const textHeight=Math.round(noticeHeight*.6);const noticeWidth=Math.max(200,textHeight*24);ctx.fillRect(0,canvas.height-noticeHeight,noticeWidth,noticeHeight);ctx.font=textHeight+"px system-ui";ctx.fillStyle="rgba(0,0,0,0.9)";ctx.fillText("Starting next pass ...",Math.round(noticeHeight*.2),canvas.height-Math.round(noticeHeight*.2))}function redrawMousePosNotice(){drawMousePosNotice(mouseNoticePosX,mouseNoticePosY)}function drawMousePosNotice(x,y){mouseNoticePosX=x;mouseNoticePosY=y;const canvas=fitSizeCanvas;const ctx=fitSizeContext;const noticeHeight=Math.max(16,canvas.height*.03);const textHeight=Math.round(noticeHeight*.6);const noticeWidth=Math.max(200,textHeight*18);const lines=[];const lineValLengthLimit=22;let imaginaryCoordinates=false;if("usesImaginaryCoordinates"in plotsByName[historyParams.plot].privContext){imaginaryCoordinates=plotsByName[historyParams.plot].privContext.usesImaginaryCoordinates}let usingFloat=true;if(historyParams.plot.startsWith("Mandelbrot")&&windowCalc.algorithm!="basic-float"){usingFloat=false}let xVal=null;let yVal=null;if(usingFloat){xVal=infNumToFloat(x).toString();yVal=infNumToFloat(y).toString()}else{xVal=infNumToString(infNumTruncateToLen(x,precision));yVal=infNumToString(infNumTruncateToLen(y,precision))}let entries=[["x",xVal],["y",yVal+(imaginaryCoordinates?"i":"")]];for(let i=0;i<entries.length;i++){const entryLabel=entries[i][0];let entryValue=entries[i][1];lines.push(entryLabel+": "+entryValue.substring(0,lineValLengthLimit));while(entryValue.length>lineValLengthLimit){entryValue=entryValue.substring(lineValLengthLimit);lines.push("   "+entryValue.substring(0,lineValLengthLimit))}}ctx.font=textHeight+"px monospace";for(let i=lines.length-1,j=0;i>=0;i--,j++){ctx.fillStyle="rgba(100,100,100,1.0)";ctx.fillRect(0,canvas.height-noticeHeight*(j+2),noticeWidth,noticeHeight);ctx.fillStyle="rgba(0,0,0,0.9)";ctx.fillText(lines[i],Math.round(noticeHeight*.2),canvas.height-noticeHeight*(j+1)-Math.round(noticeHeight*.2))}}function drawImageParameters(){drawImageParametersOnContext(fitSizeContext);drawImageParametersOnContext(dContext)}function drawImageParametersOnContext(context2d){let imaginaryCoordinates=false;if("usesImaginaryCoordinates"in plotsByName[historyParams.plot].privContext){imaginaryCoordinates=plotsByName[historyParams.plot].privContext.usesImaginaryCoordinates}const ctx=context2d;const canvas=ctx.canvas;const lineValLengthLimit=26;const noticeHeight=Math.max(16,canvas.height*.01);const textHeight=Math.round(noticeHeight*.6);const noticeWidth=Math.max(200,textHeight*lineValLengthLimit*.9);const lines=[];let entries=[[" magnif",infNumExpString(historyParams.mag)],["  scale",infNumExpString(historyParams.scale)],["   iter",historyParams.n.toString()],["   grad",historyParams.gradient.str],["  bgclr",historyParams.bgColor],["workers",windowCalc.workersCountRange]];if(historyParams.plot.startsWith("Mandelbrot")){entries.unshift([" y (im)",infNumToString(historyParams.centerY)]);entries.unshift([" x (re)",infNumToString(historyParams.centerX)])}else{if(imaginaryCoordinates){entries.unshift([" y (im)",infNumExpString(historyParams.centerY)]);entries.unshift([" x (re)",infNumExpString(historyParams.centerX)])}else{entries.unshift(["      y",infNumExpString(historyParams.centerY)]);entries.unshift(["      x",infNumExpString(historyParams.centerX)])}}entries.push(["   algo",windowCalc.algorithm]);entries.push(["sig dig",precision.toString()]);if(windowCalc.saItersSkipped!==null){entries.push(["sa skip",windowCalc.saItersSkipped.toString()])}if(windowCalc.runtimeMs>0){entries.push([" run ms",windowCalc.runtimeMs.toString()])}if(windowCalc.avgRuntimeMs>0){entries.push([" avg ms",windowCalc.avgRuntimeMs.toString()])}for(let i=0;i<entries.length;i++){const entryLabel=entries[i][0];let entryValue=entries[i][1];lines.push(entryLabel+": "+entryValue.substring(0,lineValLengthLimit));while(entryValue.length>lineValLengthLimit){entryValue=entryValue.substring(lineValLengthLimit);lines.push("         "+entryValue.substring(0,lineValLengthLimit))}}ctx.font=textHeight+"px monospace";for(let i=lines.length-1,j=0;i>=0;i--,j++){ctx.fillStyle="rgba(100,100,100,1.0)";ctx.fillRect(canvas.width-noticeWidth,canvas.height-noticeHeight*(j+1),noticeWidth,noticeHeight);ctx.fillStyle="rgba(0,0,0,0.9)";ctx.fillText(lines[i],canvas.width-noticeWidth+Math.round(noticeHeight*.2),canvas.height-noticeHeight*j-Math.round(noticeHeight*.2))}}function drawSequencePointsData(infoPoints,mouseX,mouseY){const canvas=fitSizeCanvas;const ctx=fitSizeContext;const noticeOffsetLeft=canvas.width*.25;const noticeHeight=Math.max(16,canvas.height*.03);const textHeight=Math.round(noticeHeight*.6);const noticeWidth=Math.max(200,textHeight*18);const lines=[];const lineValLengthLimit=19;let firstEntry=true;let entries=[];for(let i=0;i<infoPoints.length;i++){if(firstEntry){let coords="("+infoPoints[i].x+","+infoPoints[i].y+")";entries.push([coords,""]);firstEntry=false}for(let key in infoPoints[i].v){entries.push(["  "+key,infoPoints[i].v[key].toString()])}}for(let i=0;i<entries.length;i++){const entryLabel=entries[i][0];const entryValLengthLimit=lineValLengthLimit-entryLabel.length;let entryValue=entries[i][1];lines.push(entryLabel+": "+entryValue.substring(0,entryValLengthLimit));while(entryValue.length>entryValLengthLimit){entryValue=entryValue.substring(entryValLengthLimit);lines.push(new Array(entryLabel.length+2).fill(" ").join("")+entryValue.substring(0,entryValLengthLimit))}}ctx.font=textHeight+"px monospace";for(let i=0;i<lines.length;i++){ctx.fillStyle="rgba(100,100,100,1.0)";ctx.fillRect(noticeOffsetLeft,noticeHeight*i,noticeWidth,noticeHeight);ctx.fillStyle="rgba(0,0,0,0.9)";ctx.fillText(lines[i],noticeOffsetLeft+Math.round(noticeHeight*.2),noticeHeight*(i+1)-Math.round(noticeHeight*.2))}ctx.beginPath();const scale=infNumToFloat(historyParams.scale)/fullSizeScaleFactor;const circleX=(infoPoints[0].x-windowCalc.leftEdgeFloat)*scale;const circleY=(windowCalc.topEdgeFloat-infoPoints[0].y)*scale;ctx.lineWidth=4;ctx.strokeStyle="rgb(25,25,25)";ctx.arc(circleX,circleY,20,0,2*Math.PI,false);ctx.stroke();ctx.beginPath();ctx.lineWidth=2;ctx.strokeStyle="rgb(230,230,230)";ctx.arc(circleX,circleY,20,0,2*Math.PI,false);ctx.stroke()}function panPercentOfPixels(isHorizontal,nPercent){const dimensionPixels=isHorizontal?dCanvas.width:dCanvas.height;const pixelsToPan=Math.round(dimensionPixels*nPercent);const unitsToPan=infNumMul(createInfNum(pixelsToPan.toString()),windowCalc.eachPixUnits);if(isHorizontal){historyParams.centerX=infNumAdd(historyParams.centerX,unitsToPan);previewImageOffsetX-=pixelsToPan/fullSizeScaleFactor}else{historyParams.centerY=infNumAdd(historyParams.centerY,unitsToPan);previewImageOffsetY+=pixelsToPan/fullSizeScaleFactor}}function applyParamPercent(fieldName,pctStr){if(!historyParams.hasOwnProperty(fieldName)){console.log("unknown params field ["+fieldName+"]");return}const pct=createInfNum(pctStr);if(infNumLe(pct,infNum(0n,0n))){console.log("cannot apply a zero or negative percentage to field ["+fieldName+"]");return}const newVal=infNumMul(historyParams[fieldName],pct);historyParams[fieldName]=newVal}function sanityCheckLineWidth(w,circular,plot){if(plot.calcFrom=="window"){let newW=Math.round(w);if(newW>64){if(circular){return 1}else{return 64}}else if(newW<1){return 1}return newW}else{if(w>20){if(circular){return.5}else{return 20}}else if(w<.5){return.5}return w}}function convertPixelPosToPlanePos(x,y){let pixX=infNum(BigInt(x*fullSizeScaleFactor),0n);let pixY=infNum(BigInt(y*fullSizeScaleFactor),0n);let posX=infNumAdd(infNumDiv(pixX,historyParams.scale,precision),windowCalc.leftEdge);let posY=infNumSub(windowCalc.topEdge,infNumDiv(pixY,historyParams.scale,precision));return{x:posX,y:posY}}function findClosestSequencePoints(x,y){if(points===null||points.length===0){return[]}let closestPoint=points[0];let closestPoints=[closestPoint];if(points.length>1&&closestPoint.v.hasOwnProperty("none")){closestPoint=points[1];closestPoints=[closestPoint]}let closestPointDist=Math.pow(closestPoint.x-x,2)+Math.pow(closestPoint.y-y,2);let pointDist=null;for(let i=2;i<points.length;i++){pointDist=Math.pow(points[i].x-x,2);if(pointDist<=closestPointDist){pointDist+=Math.pow(points[i].y-y,2);if(points[i].v.hasOwnProperty("none")){continue}if(pointDist<closestPointDist){closestPoint=points[i];closestPoints=[closestPoint];closestPointDist=pointDist}else if(pointDist===closestPointDist){closestPoints.push(points[i])}}}if(closestPointDist>Math.pow(dCanvas.width/infNumToFloat(historyParams.scale)*.07,2)){closestPoints=[]}else if(closestPoints[0].v.hasOwnProperty("none")){closestPoints.shift()}return closestPoints}function drawAnnotationAtPixelPosition(x,y){if(plotsByName[historyParams.plot].calcFrom=="sequence"){let pos=convertPixelPosToPlanePos(x,y);const posXFloat=infNumToFloat(pos.x);const posYFloat=infNumToFloat(pos.y);const closestPoints=findClosestSequencePoints(posXFloat,posYFloat);drawPointsFitSize();if(closestPoints.length===0){return}drawSequencePointsData(closestPoints,x,y)}else{}}window.addEventListener("keyup",(function(e){if(e.key=="Shift"||e.keyCode==16){shiftPressed=false}else if(e.key=="Meta"||e.keyCode==224||e.key=="Alt"||e.keyCode==18||e.key=="Control"||e.keyCode==17){commandPressed=false}}));var dispatchCorrespondingKeydownEvent=function(e){if(windowLock){return}let keyName=e.target.id.substring(4);let keyEvent=new KeyboardEvent("keydown",{key:keyName});window.dispatchEvent(keyEvent)};const kbdElements=document.getElementsByTagName("kbd");for(let i=0;i<kbdElements.length;i++){if(kbdElements[i].id.startsWith("kbd-")){kbdElements[i].addEventListener("click",dispatchCorrespondingKeydownEvent)}}window.addEventListener("keydown",(function(e){if(textInputHasFocus()){return}if(windowLock&&!(e.key=="t"||e.key=="T"||e.keyCode==84)){return}if(e.keyCode==16||e.key=="Shift"){shiftPressed=true}else if(e.key=="Meta"||e.keyCode==224||e.key=="Alt"||e.keyCode==18||e.key=="Control"||e.keyCode==17){commandPressed=true}else if(e.keyCode==39||e.key=="ArrowRight"){panPercentOfPixels(true,.01);redraw()}else if(e.keyCode==68||e.key=="d"||e.key=="D"){panPercentOfPixels(true,.1);redraw()}else if(e.keyCode==37||e.key=="ArrowLeft"){panPercentOfPixels(true,-.01);redraw()}else if(e.keyCode==65||e.key=="a"||e.key=="A"){panPercentOfPixels(true,-.1);redraw()}else if(e.keyCode==38||e.key=="ArrowUp"){panPercentOfPixels(false,.01);redraw()}else if(e.keyCode==87||e.key=="w"||e.key=="W"){panPercentOfPixels(false,.1);redraw()}else if(e.keyCode==40||e.key=="ArrowDown"){panPercentOfPixels(false,-.01);redraw()}else if(e.keyCode==83||e.key=="s"||e.key=="S"){panPercentOfPixels(false,-.1);redraw()}else if(e.keyCode==61||e.keyCode==107||e.key=="+"){if(!commandPressed){applyParamPercent("scale","1.01");redraw()}}else if(e.keyCode==173||e.keyCode==109||e.key=="-"){if(!commandPressed){applyParamPercent("scale","0.99");if("minScale"in plotsByName[historyParams.plot].privContext&&infNumLt(historyParams.scale,plotsByName[historyParams.plot].privContext.minScale)){historyParams.scale=plotsByName[historyParams.plot].privContext.minScale}else if(infNumLt(historyParams.scale,infNum(1n,-2n))){historyParams.scale=createInfNum("0.01")}redraw()}}else if(e.keyCode==69||e.key=="e"||e.key=="E"){if(plotsByName[historyParams.plot].calcFrom=="sequence"){applyParamPercent("scale","1.05")}else{applyParamPercent("scale","10")}redraw()}else if(e.keyCode==81||e.key=="q"||e.key=="Q"){if(plotsByName[historyParams.plot].calcFrom=="sequence"){applyParamPercent("scale","0.95")}else{applyParamPercent("scale","0.1")}if("minScale"in plotsByName[historyParams.plot].privContext&&infNumLt(historyParams.scale,plotsByName[historyParams.plot].privContext.minScale)){historyParams.scale=plotsByName[historyParams.plot].privContext.minScale}else if(infNumLt(historyParams.scale,infNum(1n,-2n))){historyParams.scale=createInfNum("0.01")}redraw()}else if(e.keyCode==67||e.key=="c"||e.key=="C"){historyParams.centerX=createInfNum("0");historyParams.centerY=createInfNum("0");redraw()}else if(e.keyCode==77||e.key=="m"||e.key=="M"){historyParams.n+=isCurrentPlotAWindowPlot()?100:500;try{if(builtGradient.mod==0){start()}else{let grad=buildGradientObj(builtGradient.str,getCurrentPlotGradientMaxN());historyParams.gradient=grad;builtGradient=grad;start()}}catch(err){displayGradientError(err)}}else if(e.keyCode==78||e.key=="n"||e.key=="N"){if(historyParams.n>100){historyParams.n-=100;try{if(builtGradient.mod==0){start()}else{let grad=buildGradientObj(builtGradient.str,getCurrentPlotGradientMaxN());historyParams.gradient=grad;builtGradient=grad;start()}}catch(err){displayGradientError(err)}}}else if(e.keyCode==86||e.key=="v"||e.key=="V"){const gradients=isCurrentPlotAWindowPlot()?windowPlotGradients:sequencePlotGradients;let schemeNum=-1;for(let i=0;i<gradients.length;i++){if(gradients[i].colors==historyParams.gradient.colors){schemeNum=i;break}}schemeNum+=1;if(schemeNum>=gradients.length){schemeNum=0}try{let newGradStr=gradients[schemeNum].colors;if(historyParams.gradient.options.length>0){newGradStr+="-"+historyParams.gradient.options}let grad=buildGradientObj(newGradStr,getCurrentPlotGradientMaxN());historyParams.gradient=grad;builtGradient=grad;setupGradientSelectControl(gradients);hideGradientError();if(isCurrentPlotAWindowPlot()){recolor()}else{redraw()}}catch(err){displayGradientError(err)}}else if(e.keyCode==66||e.key=="b"||e.key=="B"){let schemeNum=-1;for(let i=0;i<bgColorSchemeNames.length;i++){if(bgColorSchemeNames[i]==historyParams.bgColor){schemeNum=i;break}}schemeNum+=1;if(schemeNum>=bgColorSchemeNames.length){schemeNum=0}historyParams.bgColor=bgColorSchemeNames[schemeNum];if(plotsByName[historyParams.plot].calcFrom=="window"){recolor()}else{redraw()}}else if(e.keyCode==88||e.key=="x"||e.key=="X"){let plotNum=-1;for(let i=0;i<plots.length;i++){if(plots[i].name==historyParams.plot){plotNum=i;break}}plotNum+=1;if(plotNum>=plots.length){plotNum=0}historyParams.plot=plots[plotNum].name;let defaults=Object.assign(historyParams,plots[plotNum].forcedDefaults);replaceHistoryWithParams(defaults);parseUrlParams();start()}else if(e.keyCode==90||e.key=="z"||e.key=="Z"){if(plotsByName[historyParams.plot].calcFrom=="window"){historyParams.lineWidth=sanityCheckLineWidth(historyParams.lineWidth+1,true,plotsByName[historyParams.plot]);start()}else{historyParams.lineWidth=sanityCheckLineWidth(historyParams.lineWidth+.5,true,plotsByName[historyParams.plot]);redraw()}}else if(e.keyCode==72||e.key=="h"||e.key=="H"){if(helpVisible){closeHelpMenu()}else{openHelpMenu()}}else if(e.keyCode==79||e.key=="o"||e.key=="O"){if(controlsVisible){closeControlsMenu()}else{openControlsMenu()}}else if(e.keyCode==80||e.key=="p"||e.key=="P"){if(menuVisible){closeMenu()}else{openMenu()}}else if(e.key=="r"||e.key=="R"||e.keyCode==82){showMousePosition=!showMousePosition;if(!showMousePosition){repaintOnly();if(imageParametersCaption){drawImageParameters()}}}else if(e.key=="t"||e.key=="T"||e.keyCode==84){imageParametersCaption=!imageParametersCaption;if(imageParametersCaption){drawImageParameters()}else{repaintOnly()}}else if(e.key=="y"||e.key=="Y"||e.keyCode==89){if(workersCount>1){workersCount--}workersSelect.value=workersCount;changeWorkersCount()}else if(e.key=="u"||e.key=="U"||e.keyCode==85){if(workersCount<maxWorkers){workersCount++}workersSelect.value=workersCount;changeWorkersCount()}else if(e.key=="Escape"||e.keyCode==27){if(!useWorkers){windowCalc.stage=windowCalcStages.stop}stopWorkers();repaintOnly()}else if(e.keyCode==49||e.keyCode==97||e.key=="1"){activatePreset(presets[0])}else if(e.keyCode==50||e.keyCode==98||e.key=="2"){activatePreset(presets[1])}else if(e.keyCode==51||e.keyCode==99||e.key=="3"){activatePreset(presets[2])}else if(e.keyCode==52||e.keyCode==100||e.key=="4"){activatePreset(presets[3])}else if(e.keyCode==53||e.keyCode==101||e.key=="5"){activatePreset(presets[4])}}));function resizeCanvas(){if(!windowLock){return}setDScaleVars();redraw()}window.addEventListener("resize",(function(){if(resizeTimeout!==null){window.clearTimeout(resizeTimeout)}if(windowLock){console.log("ignoring window resize event");return}resizeTimeout=window.setTimeout(resizeCanvas,500)}));var mouseDownHandler=function(e){if(windowLock){return}e.preventDefault();if("button"in e&&e.button!=0){return}if(shiftPressed){let pixXFloat=Math.round(e.pageX-fitSizeCanvas.width/2);let pixYFloat=Math.round(fitSizeCanvas.height-e.pageY-fitSizeCanvas.height/2);let pixX=infNum(BigInt(pixXFloat),0n);let pixY=infNum(BigInt(pixYFloat),0n);let posX=infNumAdd(infNumMul(pixX,windowCalc.eachPixUnits),historyParams.centerX);let posY=infNumAdd(infNumMul(pixY,windowCalc.eachPixUnits),historyParams.centerY);historyParams.centerX=posX;historyParams.centerY=posY;previewImageOffsetX-=pixXFloat;previewImageOffsetY+=pixYFloat;drawPreviewImage();redraw();return}if("touches"in e&&"1"in e.touches){pinch=true;pinchStartDist=Math.hypot(e.touches["0"].pageX-e.touches["1"].pageX,e.touches["0"].pageY-e.touches["1"].pageY)}mouseDrag=true;mouseDragX=e.pageX;mouseDragY=e.pageY};fitSizeCanvas.addEventListener("mousedown",mouseDownHandler);fitSizeCanvas.addEventListener("touchstart",mouseDownHandler);var mouseMoveHandler=function(e){if(windowLock){return}e.preventDefault();if(!mouseDrag){if(showMousePosition){let pos=convertPixelPosToPlanePos(e.pageX,e.pageY);drawMousePosNotice(pos.x,pos.y)}return}const newX=e.pageX;const newY=e.pageY;const pixDiffX=(mouseDragX-newX)*fullSizeScaleFactor;const pixDiffY=(mouseDragY-newY)*fullSizeScaleFactor;const diffX=infNumMul(infNum(BigInt(pixDiffX),0n),windowCalc.eachPixUnits);const diffY=infNumMul(infNum(BigInt(pixDiffY),0n),windowCalc.eachPixUnits);historyParams.centerX=infNumAdd(historyParams.centerX,diffX);historyParams.centerY=infNumSub(historyParams.centerY,diffY);mouseDragX=newX;mouseDragY=newY;previewImageOffsetX-=pixDiffX/fullSizeScaleFactor;previewImageOffsetY-=pixDiffY/fullSizeScaleFactor;if("touches"in e&&"1"in e.touches){const midX=(e.touches["0"].pageX+e.touches["1"].pageX)/2;const midY=(e.touches["0"].pageY+e.touches["1"].pageY)/2;const oldScale=historyParams.scale;const pinchDuringDist=Math.hypot(e.touches["0"].pageX-e.touches["1"].pageX,e.touches["0"].pageY-e.touches["1"].pageY);const pinchRatio=pinchDuringDist/pinchStartDist;pinchStartDist=pinchDuringDist;const newScale=infNumMul(historyParams.scale,createInfNum(pinchRatio.toString()));const maxSeqScale=createInfNum("500");const minSeqScale=createInfNum("0.00005");if(plotsByName[historyParams.plot].calcFrom=="sequence"){if(infNumLt(newScale,minSeqScale)){historyParams.scale=minSeqScale}else if(infNumGt(newScale,maxSeqScale)){historyParams.scale=maxSeqScale}else{historyParams.scale=newScale}}else{if("minScale"in plotsByName[historyParams.plot].privContext&&infNumLt(newScale,plotsByName[historyParams.plot].privContext.minScale)){return}historyParams.scale=newScale}const newCenterX=calculateNewZoomCenterX(infNum(BigInt(midX*fullSizeScaleFactor),0n),infNum(BigInt(dCanvas.width),0n),historyParams.centerX,oldScale,historyParams.scale);const newCenterY=calculateNewZoomCenterY(infNum(BigInt(midY*fullSizeScaleFactor),0n),infNum(BigInt(dCanvas.height),0n),historyParams.centerY,oldScale,historyParams.scale);historyParams.centerX=newCenterX;historyParams.centerY=newCenterY}redraw()};fitSizeCanvas.addEventListener("mousemove",mouseMoveHandler);fitSizeCanvas.addEventListener("touchmove",mouseMoveHandler);var mouseUpHandler=function(e){if(windowLock){return}e.preventDefault();mouseDrag=false;pinch=false;if(annotateClickPosition){drawAnnotationAtPixelPosition(e.pageX,e.pageY)}};fitSizeCanvas.addEventListener("mouseup",mouseUpHandler);fitSizeCanvas.addEventListener("touchend",mouseUpHandler);fitSizeCanvas.addEventListener("wheel",(function(e){if(windowLock){return}const oldScale=historyParams.scale;var newScaleFactor=createInfNum((1+e.wheelDeltaY/48*.05).toString());if(infNumLt(newScaleFactor,createInfNum("0"))){console.log("NEGATIVE scale factor would have been applied: ["+infNumToString(newScaleFactor)+"]");newScaleFactor=createInfNum("0.05")}const newScale=infNumMul(historyParams.scale,newScaleFactor);const maxSeqScale=createInfNum("5000000000");const minSeqScale=createInfNum("0.00005");if(plotsByName[historyParams.plot].calcFrom=="sequence"){if(infNumLt(newScale,minSeqScale)){historyParams.scale=minSeqScale}else if(infNumGt(newScale,maxSeqScale)){historyParams.scale=maxSeqScale}else{historyParams.scale=newScale}}else{if("minScale"in plotsByName[historyParams.plot].privContext&&infNumLt(newScale,plotsByName[historyParams.plot].privContext.minScale)){return}historyParams.scale=newScale}const newCenterX=calculateNewZoomCenterX(infNum(BigInt(e.pageX*fullSizeScaleFactor),0n),infNum(BigInt(dCanvas.width),0n),historyParams.centerX,oldScale,historyParams.scale);const newCenterY=calculateNewZoomCenterY(infNum(BigInt(e.pageY*fullSizeScaleFactor),0n),infNum(BigInt(dCanvas.height),0n),historyParams.centerY,oldScale,historyParams.scale);historyParams.centerX=newCenterX;historyParams.centerY=newCenterY;redraw()}));function calculateNewZoomCenterX(pixelPosition,canvasSize,oldCenter,oldScale,newScale){const edge=infNumSub(oldCenter,infNumDiv(infNumDiv(canvasSize,infNum(2n,0n),precision),oldScale,precision));const pos=infNumAdd(infNumDiv(pixelPosition,oldScale,precision),edge);const scaleRatio=infNumDiv(oldScale,newScale,precision);return infNumAdd(infNumSub(pos,infNumMul(pos,scaleRatio)),infNumMul(oldCenter,scaleRatio))}function calculateNewZoomCenterY(pixelPosition,canvasSize,oldCenter,oldScale,newScale){const edge=infNumAdd(oldCenter,infNumDiv(infNumDiv(canvasSize,infNum(2n,0n),precision),oldScale,precision));const pos=infNumSub(edge,infNumDiv(pixelPosition,oldScale,precision));const scaleRatio=infNumDiv(oldScale,newScale,precision);return infNumAdd(infNumSub(infNumMul(oldCenter,scaleRatio),infNumMul(pos,scaleRatio)),pos)}document.getElementById("menu-open").addEventListener("click",(function(e){openMenu()}),true);document.getElementById("menu-close").addEventListener("click",(function(e){closeMenu();closeHelpMenu();closeControlsMenu()}),true);document.getElementById("help-menu-open").addEventListener("click",(function(e){openHelpMenu()}),true);document.getElementById("help-menu-close").addEventListener("click",(function(e){closeMenu();closeHelpMenu();closeControlsMenu()}),true);document.getElementById("controls-menu-open").addEventListener("click",(function(e){openControlsMenu()}),true);document.getElementById("controls-menu-close").addEventListener("click",(function(e){closeMenu();closeHelpMenu();closeControlsMenu()}),true);function closeMenu(){menuVisible=false;hideFooter();document.getElementById("menu").style.display="none";document.getElementById("menu-open-wrap").style.display="block"}function openMenu(){menuVisible=true;closeHelpMenu();closeControlsMenu();showFooter();document.getElementById("menu").style.display="block";document.getElementById("menu-open-wrap").style.display="none"}function closeHelpMenu(){helpVisible=false;hideFooter();document.getElementById("help-menu").style.display="none";document.getElementById("menu-open-wrap").style.display="block"}function openHelpMenu(){closeMenu();closeControlsMenu();showFooter();helpVisible=true;document.getElementById("help-menu").style.display="block";document.getElementById("menu-open-wrap").style.display="none"}function closeControlsMenu(){controlsVisible=false;hideFooter();document.getElementById("controls-menu").style.display="none";document.getElementById("menu-open-wrap").style.display="block"}function openControlsMenu(){closeMenu();closeHelpMenu();showFooter();controlsVisible=true;document.getElementById("controls-menu").style.display="block";document.getElementById("menu-open-wrap").style.display="none";updateGradientPreview()}function showFooter(){document.getElementById("footer").style.display="block"}function hideFooter(){document.getElementById("footer").style.display="none"}buildGradient("Bw");setDScaleVarsNoScale();parseUrlParams();start();